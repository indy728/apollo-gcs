[{"/Users/kylemurray/apollo-file-upload/client/src/index.js":"1","/Users/kylemurray/apollo-file-upload/client/src/App.js":"2","/Users/kylemurray/apollo-file-upload/client/src/reportWebVitals.js":"3","/Users/kylemurray/apollo-file-upload/client/src/apollo.js":"4","/Users/kylemurray/apollo-file-upload/client/src/components/apollo/index.js":"5","/Users/kylemurray/apollo-file-upload/client/src/components/apollo/mutations.gql.js":"6","/Users/kylemurray/apollo-file-upload/client/src/components/apollo/queries.gql.js":"7","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/components/index.js":"8","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/components/upload-form.component.js":"9","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/index.js":"10","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/file-form-list.upload.js":"11","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/file-selector.upload.js":"12"},{"size":865,"mtime":1609898888036,"results":"13","hashOfConfig":"14"},{"size":213,"mtime":1610488859622,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1609879080261,"results":"16","hashOfConfig":"14"},{"size":422,"mtime":1610131440880,"results":"17","hashOfConfig":"14"},{"size":61,"mtime":1609968821891,"results":"18","hashOfConfig":"14"},{"size":499,"mtime":1610668823460,"results":"19","hashOfConfig":"14"},{"size":187,"mtime":1610483775762,"results":"20","hashOfConfig":"14"},{"size":39,"mtime":1610421758726,"results":"21","hashOfConfig":"14"},{"size":5132,"mtime":1610669028549,"results":"22","hashOfConfig":"14"},{"size":128,"mtime":1610488735684,"results":"23","hashOfConfig":"14"},{"size":2245,"mtime":1610662204551,"results":"24","hashOfConfig":"14"},{"size":658,"mtime":1610488797536,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1yz7ysc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/kylemurray/apollo-file-upload/client/src/index.js",[],["54","55"],"/Users/kylemurray/apollo-file-upload/client/src/App.js",[],"/Users/kylemurray/apollo-file-upload/client/src/reportWebVitals.js",[],"/Users/kylemurray/apollo-file-upload/client/src/apollo.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/apollo/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/apollo/mutations.gql.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/apollo/queries.gql.js",[],["56","57"],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/components/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/components/upload-form.component.js",["58"],"import { useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport {FIREBASE_WRITE} from '../../apollo'\nimport {useForm, Controller} from 'react-hook-form'\nimport styled from 'styled-components'\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst UploadCard = styled(Card)`\n  && {\n    background-color: ghostwhite;\n    margin: 0 20px;\n\n    &:not(:first-of-type){\n      margin-top: 20px;\n    }\n  }\n`\n\nexport const UploadForm = ({metadata: {\n  title, filename, format, artist, duration, bpm, key\n}}) => {\n  duration = duration || 0\n  const songLength = `${Math.floor(duration / 60)}:${Math.floor(duration % 60).toString().padStart(2, \"0\")}`\n  const [fbWrite] = useMutation(FIREBASE_WRITE, {\n    onCompleted: () => console.log('Check the db')\n  })\n  const {register, errors, handleSubmit, control} = useForm({\n    defaultValues: {\n      title: title || '',\n      filename,\n      format: format || '',\n      artist: artist || '',\n      duration: songLength,\n      bpm: bpm || '',\n      key: key || ''\n    }\n  });\n  const onSubmit = values => {\n    console.log(values)\n    fbWrite({variables: {entry: {...values}}})\n  }\n  \n  return (\n    <UploadCard>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Track information\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs={8}>\n            <Controller\n              control={control}\n              name=\"filename\"\n              render={(\n                {value, name},\n              ) => (\n                <TextField\n                  name={name}\n                  label=\"File name\"\n                  value={value}\n                  fullWidth\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <Controller\n                control={control}\n                name=\"format\"\n                render={(\n                  {value, name},\n                ) => (\n                <TextField\n                  name={name}\n                  label=\"File format\"\n                  value={value}\n                  fullWidth\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                />\n              )}\n              />\n          </Grid>\n          <Grid item xs={12}>\n            <Controller\n              control={control}\n              name=\"title\"\n              rules={{required: true}}\n              render={(\n                {onChange, value, name},\n              ) => (\n                <TextField\n                  name={name}\n                  label=\"Song title\"\n                  value={value}\n                  onChange={onChange}\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Controller\n              control={control}\n              name=\"artist\"\n              rules={{required: true}}\n              render={(\n                {onChange, value, name},\n              ) => (\n                <TextField\n                  name={name}\n                  label=\"Artist\"\n                  value={value}\n                  onChange={onChange}\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4}>\n          <Controller\n              control={control}\n              name=\"duration\"\n              rules={{required: true}}\n              render={(\n                {value, name},\n              ) => (\n                <TextField\n                  name={name}\n                  label=\"Length\"\n                  value={value}\n                  fullWidth\n                  inputProps={{\n                    readOnly: true\n                  }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <Controller\n              control={control}\n              name=\"bpm\"\n              render={(\n                {onChange, value, name},\n              ) => (\n              <TextField\n                name={name}\n                label=\"BPM\"\n                value={value}\n                onChange={onChange}\n                fullWidth\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <Controller\n              control={control}\n              name=\"key\"\n              render={(\n                {onChange, value, name},\n              ) => (\n                <TextField\n                  name={name}\n                  label=\"key\"\n                  value={value}\n                  fullWidth\n                  ref={register}\n                />\n              )}\n            />\n          </Grid>\n          <Button type=\"submit\" onClick={handleSubmit(onSubmit)}>Submit</Button>\n      </Grid>\n      </CardContent>\n    </UploadCard>\n    )\n}","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/file-form-list.upload.js",["59"],"import { useQuery, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport {FILES_QUERY, DELETE_FILE, FIREBASE_WRITE} from '../apollo'\nimport styled from 'styled-components';\nimport {UploadForm} from './components';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst FileUploadContainer = styled.main`\n  background-color: teal;\n  width: auto;\n  margin: 32px auto;\n\n  @media (min-width: 600px) {\n    width: 600px;\n  }\n`\n\nconst FileUploadPaper = styled(Paper)`\n  && {\n    background-color: #bbb;\n    padding-bottom: 20px;\n  }\n`\n\nconst FileFormList = () => {\n  const { data, loading, error } = useQuery(FILES_QUERY);\n  const [deleteFiles] = useMutation(DELETE_FILE, {\n    refetchQueries: [{ query: FILES_QUERY}],\n    // onCompleted: data => console.log('[Files] del_data: ', del_data)\n  })\n  const [fbWrite] = useMutation(FIREBASE_WRITE, {\n    onCompleted: () => console.log('Check the db')\n  })\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n  if (error) {\n    console.log(error.message)\n    return <div>error importing files</div>\n  }\n\n  console.log('[Files] data: ', data)\n\n  // const handleDelete = (file) => {\n  //   console.log('[Files] file: ', file)\n  //   if (file) {\n  //     deleteFiles({variables: {file}})\n  //   }\n  // }\n\n  return (\n    // <FileUploadContainer className=\"file-upload-container\">\n\n    // </FileUploadContainer>\n    <FileUploadContainer>\n    <FileUploadPaper className={'file-upload-paper'}>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Songs Upload\n      </Typography>\n      {/* <Stepper activeStep={activeStep} className={classes.stepper}>\n        {steps.map((label) => (\n          <Step key={label}>\n          <StepLabel>{label}</StepLabel>\n          </Step>\n          ))}\n        </Stepper> */}\n      <>\n           {data.files && data.files.map((metadata, i) => {\n    \n            return (\n              <UploadForm metadata={metadata} key={metadata.filename + i} idx={i}/>\n          )})}\n        \n      </>\n    </FileUploadPaper>\n    <button onClick={() => fbWrite({variables: {entry: 'show me 69'}})}>FB TEST</button>\n    {/* <Copyright /> */}\n  </FileUploadContainer>\n  );\n};\n\nexport default FileFormList;\n","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/file-selector.upload.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"60","replacedBy":"64"},{"ruleId":"62","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":32,"column":20,"nodeType":"68","messageId":"69","endLine":32,"endColumn":26},{"ruleId":"66","severity":1,"message":"70","line":29,"column":10,"nodeType":"68","messageId":"69","endLine":29,"endColumn":21},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],["71"],["72"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'deleteFiles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]