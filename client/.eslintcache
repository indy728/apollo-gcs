[{"/Users/kylemurray/apollo-file-upload/client/src/App.js":"1","/Users/kylemurray/apollo-file-upload/client/src/reportWebVitals.js":"2","/Users/kylemurray/apollo-file-upload/client/src/apollo.js":"3","/Users/kylemurray/apollo-file-upload/client/src/components/apollo/index.js":"4","/Users/kylemurray/apollo-file-upload/client/src/components/apollo/mutations.gql.js":"5","/Users/kylemurray/apollo-file-upload/client/src/components/apollo/queries.gql.js":"6","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/index.js":"7","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/file-form-list.upload.js":"8","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/file-selector.upload.js":"9","/Users/kylemurray/apollo-file-upload/client/src/components/navigation/index.js":"10","/Users/kylemurray/apollo-file-upload/client/src/components/navigation/TopNav/index.js":"11","/Users/kylemurray/apollo-file-upload/client/src/components/Search/components/Search/index.js":"12","/Users/kylemurray/apollo-file-upload/client/src/components/Search/components/Search/components/index.js":"13","/Users/kylemurray/apollo-file-upload/client/src/components/Search/components/Search/components/search-field.search.js":"14","/Users/kylemurray/apollo-file-upload/client/src/components/Search/components/Search/components/track-list.search.js":"15","/Users/kylemurray/apollo-file-upload/client/src/components/ui/containers/index.js":"16","/Users/kylemurray/apollo-file-upload/client/src/components/ui/flex-util/index.js":"17","/Users/kylemurray/apollo-file-upload/client/src/components/ui/buttons/index.js":"18","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/index.js":"19","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/header/index.js":"20","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/index.js":"21","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/bpm.controller.js":"22","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/genre.controller.js":"23","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-duration.controller.js":"24","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-key.controller.js":"25","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/artist.controller.js":"26","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/header/header.styles.js":"27","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/upload-filename.controller.js":"28","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-title.controller.js":"29","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-form.styles.js":"30","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-field/index.js":"31","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-field/upload-field.styles.js":"32","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/index.js":"33","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tag-list.js":"34","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tag-input.js":"35","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tags.styles.js":"36","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/legend/index.js":"37","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/legend/legend.styles.js":"38","/Users/kylemurray/apollo-file-upload/client/src/components/util/index.js":"39","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/util/index.js":"40","/Users/kylemurray/apollo-file-upload/client/src/components/util/string.util.js":"41","/Users/kylemurray/apollo-file-upload/client/src/index.js":"42","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/index.tsx":"43","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth.styles.tsx":"44","/Users/kylemurray/apollo-file-upload/client/src/components/ui/index.ts":"45","/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/index.ts":"46","/Users/kylemurray/apollo-file-upload/client/src/components/ui/typography/index.tsx":"47","/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/brand.components.tsx":"48","/Users/kylemurray/apollo-file-upload/client/src/components/ui/typography/typography.styles.tsx":"49","/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/brand.styles.tsx":"50","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth-form/index.tsx":"51","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth-form/components/index.tsx":"52","/Users/kylemurray/apollo-file-upload/client/src/global/index.ts":"53","/Users/kylemurray/apollo-file-upload/client/src/components/ui/dividers/index.ts":"54","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth-form/components/sign-in.auth.tsx":"55","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth-form/components/sign-up.auth.tsx":"56","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth-form/components/auth-form.styles.tsx":"57","/Users/kylemurray/apollo-file-upload/client/src/generated/graphql.tsx":"58","/Users/kylemurray/apollo-file-upload/client/src/components/ui/inputs/index.tsx":"59","/Users/kylemurray/apollo-file-upload/client/src/components/Search/index.tsx":"60","/Users/kylemurray/apollo-file-upload/client/src/accessToken.ts":"61"},{"size":4495,"mtime":1615927331874,"results":"62","hashOfConfig":"63"},{"size":433,"mtime":1615920034155,"results":"64","hashOfConfig":"63"},{"size":448,"mtime":1615923531847,"results":"65","hashOfConfig":"63"},{"size":61,"mtime":1611099599650,"results":"66","hashOfConfig":"63"},{"size":1193,"mtime":1615841126372,"results":"67","hashOfConfig":"63"},{"size":788,"mtime":1615841126373,"results":"68","hashOfConfig":"63"},{"size":942,"mtime":1614626162388,"results":"69","hashOfConfig":"63"},{"size":1609,"mtime":1614277213989,"results":"70","hashOfConfig":"63"},{"size":2308,"mtime":1614277213990,"results":"71","hashOfConfig":"63"},{"size":43,"mtime":1611353305772,"results":"72","hashOfConfig":"63"},{"size":2464,"mtime":1615915547437,"results":"73","hashOfConfig":"63"},{"size":954,"mtime":1614277213988,"results":"74","hashOfConfig":"63"},{"size":119,"mtime":1611356878957,"results":"75","hashOfConfig":"63"},{"size":1004,"mtime":1614277213986,"results":"76","hashOfConfig":"63"},{"size":4699,"mtime":1614277213987,"results":"77","hashOfConfig":"63"},{"size":515,"mtime":1615242240988,"results":"78","hashOfConfig":"63"},{"size":359,"mtime":1614277214009,"results":"79","hashOfConfig":"63"},{"size":1363,"mtime":1614277214008,"results":"80","hashOfConfig":"63"},{"size":7264,"mtime":1615242240984,"results":"81","hashOfConfig":"63"},{"size":578,"mtime":1614277213996,"results":"82","hashOfConfig":"63"},{"size":492,"mtime":1614277213992,"results":"83","hashOfConfig":"63"},{"size":403,"mtime":1614277213992,"results":"84","hashOfConfig":"63"},{"size":2073,"mtime":1615242240983,"results":"85","hashOfConfig":"63"},{"size":1306,"mtime":1614277213993,"results":"86","hashOfConfig":"63"},{"size":1227,"mtime":1614277213994,"results":"87","hashOfConfig":"63"},{"size":460,"mtime":1614277213991,"results":"88","hashOfConfig":"63"},{"size":435,"mtime":1614277213995,"results":"89","hashOfConfig":"63"},{"size":492,"mtime":1614277213995,"results":"90","hashOfConfig":"63"},{"size":450,"mtime":1615242240984,"results":"91","hashOfConfig":"63"},{"size":500,"mtime":1614277214003,"results":"92","hashOfConfig":"63"},{"size":1053,"mtime":1614277214001,"results":"93","hashOfConfig":"63"},{"size":854,"mtime":1614277214002,"results":"94","hashOfConfig":"63"},{"size":95,"mtime":1614277213999,"results":"95","hashOfConfig":"63"},{"size":819,"mtime":1614277214000,"results":"96","hashOfConfig":"63"},{"size":799,"mtime":1614277213999,"results":"97","hashOfConfig":"63"},{"size":1235,"mtime":1614277214001,"results":"98","hashOfConfig":"63"},{"size":381,"mtime":1614277213997,"results":"99","hashOfConfig":"63"},{"size":463,"mtime":1614277213998,"results":"100","hashOfConfig":"63"},{"size":30,"mtime":1614277214015,"results":"101","hashOfConfig":"63"},{"size":1549,"mtime":1614277214004,"results":"102","hashOfConfig":"63"},{"size":178,"mtime":1614277214015,"results":"103","hashOfConfig":"63"},{"size":727,"mtime":1615242240992,"results":"104","hashOfConfig":"63"},{"size":913,"mtime":1615920027156,"results":"105","hashOfConfig":"63"},{"size":1009,"mtime":1615242240978,"results":"106","hashOfConfig":"63"},{"size":194,"mtime":1615841126375,"results":"107","hashOfConfig":"63"},{"size":35,"mtime":1615242240987,"results":"108","hashOfConfig":"63"},{"size":1047,"mtime":1615841126376,"results":"109","hashOfConfig":"63"},{"size":200,"mtime":1615242240986,"results":"110","hashOfConfig":"63"},{"size":385,"mtime":1615841126377,"results":"111","hashOfConfig":"63"},{"size":250,"mtime":1615242240986,"results":"112","hashOfConfig":"63"},{"size":954,"mtime":1615842774042,"results":"113","hashOfConfig":"63"},{"size":99,"mtime":1615841126368,"results":"114","hashOfConfig":"63"},{"size":72,"mtime":1615917552225,"results":"115","hashOfConfig":"63"},{"size":171,"mtime":1615841126375,"results":"116","hashOfConfig":"63"},{"size":3255,"mtime":1615922371829,"results":"117","hashOfConfig":"63"},{"size":4043,"mtime":1615917499156,"results":"118","hashOfConfig":"63"},{"size":743,"mtime":1615841126367,"results":"119","hashOfConfig":"63"},{"size":13500,"mtime":1615916566234,"results":"120","hashOfConfig":"63"},{"size":1499,"mtime":1615919928329,"results":"121","hashOfConfig":"63"},{"size":437,"mtime":1615923340800,"results":"122","hashOfConfig":"63"},{"size":284,"mtime":1615927012436,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"j2rfp2",{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"128"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"128"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"128"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"128"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"128"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"128"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"128"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"128"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"128"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"128"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"128"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"128"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"128"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"128"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"128"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"234"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"234"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"234"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"234"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"234"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kylemurray/apollo-file-upload/client/src/App.js",["276","277"],"/Users/kylemurray/apollo-file-upload/client/src/reportWebVitals.js",[],[],"/Users/kylemurray/apollo-file-upload/client/src/apollo.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/apollo/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/apollo/mutations.gql.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/apollo/queries.gql.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/index.js",["278"],"import React from 'react';\nimport styled from 'styled-components';\nimport {useMutation, useQuery} from '@apollo/client';\nimport {FILES_QUERY, STAGE_TRACKS, UNSTAGE_TRACKS} from '../apollo'\nimport FileFormList from './file-form-list.upload';\nimport FileSelector from './file-selector.upload';\n\nconst UploadPage = styled.main`\n  width: 100%;\n  margin: 32px auto;\n`\n\nconst Upload = () => {\n  // Check to see if there are tracks staged for upload on Node server\n  const queryResult = useQuery(FILES_QUERY);\n\n  const [unstageTracks] = useMutation(UNSTAGE_TRACKS, {\n    refetchQueries: [{ query: FILES_QUERY }],\n  })\n  const [stageTracks] = useMutation(STAGE_TRACKS, {\n    refetchQueries: [{ query: FILES_QUERY}],\n  })\n\n  return (\n    <UploadPage>\n      <FileFormList queryResult={queryResult} unstageTracks={unstageTracks}/>\n      <FileSelector queryResult={queryResult} stageTracks={stageTracks} />\n    </UploadPage>\n  )\n}\n\nexport default Upload;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/file-form-list.upload.js",["279","280"],"import React from \"react\";\nimport styled from 'styled-components';\nimport {UploadForm} from './upload-form';\nimport {Paper} from 'components/ui';\n\nconst FileUploadContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column;\n  background-color: ${({theme: {primary}}) => primary[0]};\n  padding: 1rem 1rem;\n  max-width: 960px;\n  margin: 0 auto;\n  border-radius: ${({theme: {borderRadius}}) => borderRadius};\n`\n\nconst FileUploadPaper = styled(Paper)``;\n\nconst FileFormList = ({queryResult: { data, loading, error}, unstageTracks}) => {\n  if (loading) {\n    return <div>loading...</div>;\n  }\n  if (error) {\n    console.log(error.message)\n    return <div>error importing stagedTracks</div>\n  }\n\n  return (\n    // <FileUploadContainer className=\"file-upload-container\">\n\n    // </FileUploadContainer>\n    <FileUploadContainer>\n      {loading && <div>loading...</div>}\n      {error && <div>error importing stagedTracks: {error.message}</div>}\n      {data && data.stagedTracks.length ? (\n        <FileUploadPaper className={'file-upload-paper'}>\n          <>\n              {data.stagedTracks && data.stagedTracks.map((metadata, i) => {\n        \n                return (\n                  <UploadForm metadata={metadata} key={metadata.filename + i} unstageTracks={unstageTracks} idx={i}/>\n              )})}\n            \n          </>\n        </FileUploadPaper>\n        ) : (\n          <span>Choose tracks from your local drive to upload to <span className='brand-text'>meatport</span></span>\n        )}\n  </FileUploadContainer>\n  );\n};\n\nexport default FileFormList;\n","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/file-selector.upload.js",["281","282"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  width: 100%;\n  padding: 5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column;\n`;\n\nconst StyledHeaderWrapper = styled.div`\n  padding: 2rem 0;\n`;\n\nconst StyledInputLabel = styled.label`\n  &.file-upload__label {\n    background-color: ${({theme: {primary}}) => primary[3]};\n    box-shadow: 0 1px 5px 1px rgba(255,255,255,.4);\n    border-radius: 3px;\n    font-size: 1.4rem;\n    text-transform: uppercase;\n    padding: 1rem;\n    transition: all .1s linear;\n    cursor: pointer;\n\n    :hover {\n      box-shadow: 0 2px 10px 3px rgba(255,255,255,.4);\n      transform: translateY(-.2rem);\n    }\n\n    :active {\n      box-shadow: 0 2px 10px 1px rgba(255,255,255,.4);\n      transform: translateY(-.1rem);\n    }\n  }\n\n  input {\n    display: none;\n  }\n`;\n\nconst StyledTypography = styled.span`\n  .big {\n    font-size: 125%;\n  }\n\n  .bigger {\n    font-size: 150%;\n  }\n\n  .biggest {\n    font-size: 200%;\n  }\n\n  .italic {\n    font-style: italic;\n  }\n`;\n\nconst Typography = ({variant = 'span', children}) => (\n  <StyledTypography as={variant}>\n    {children}\n  </StyledTypography>\n)\n\nconst FileSelector = ({queryResult: { data }, stageTracks}) => {\n  \n  const limit = 10;\n  const stagedTrackCount = ((data && data.stagedTracks.length) || 0);\n\n  const handleFileChange = e => {\n    const selected = e.target.files\n    if (!selected.length) return \n    stageTracks({variables: {files: selected}})\n  }\n\n  const helperText = stagedTrackCount >= limit ? (\n    <Typography variant=\"h2\">\n      Upload or unstage tracks to be able to select more.\n    </Typography>\n  ) : (\n    <Typography variant=\"h2\">\n      Choose up to <span className='bigger'>{limit - stagedTrackCount}</span> more WAV, AIFF, FLAC or MP3 file{limit - stagedTrackCount > 1 ? 's' : ''} to stage.\n    </Typography>\n  )\n\n  return (\n    <Wrapper>\n      {stagedTrackCount < limit && (\n        <StyledInputLabel className='file-upload__label'>\n          <input type=\"file\" accept=\".mp3,.wav,.aif,.aiff\" onChange={handleFileChange} multiple />\n          Select Files\n        </StyledInputLabel>\n      )}\n      <StyledHeaderWrapper>\n        {helperText}\n      </StyledHeaderWrapper>\n    </Wrapper>\n  )\n}\n\nexport default FileSelector;\n","/Users/kylemurray/apollo-file-upload/client/src/components/navigation/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/navigation/TopNav/index.js",["283","284","285","286","287","288","289","290"],"import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {Link, withRouter, NavLink} from 'react-router-dom';\nimport { FlexSpacer, InlineBrand, Typography } from 'components/ui';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { FB_LOGOUT_USER, CHECK_AUTH } from 'components/apollo';\nimport {RolesEnum} from 'global';\nimport {useCheckAuthQuery} from 'generated/graphql';\n\nconst links = (user) => ({\n  'search': {\n    to: '/search',\n    text: 'Track Search'\n  },\n  'upload': {\n    to: '/upload',\n    text: 'Upload Tracks'\n  },\n  'logout': {\n    to: '/logout',\n    text: 'Sign out'\n  },\n  'user': {\n    to: '/user',\n    text: `Hi, ${user}!`\n  },\n});\n\nconst HeaderItems = styled.div`\n  /* background-color: ${({theme: {primary}}) => primary[0]}; */\n  height: 10rem;\n  margin: 0 auto;\n  padding: 0 1rem;\n  display: flex;\n  align-items: center;\n  max-width: 1232px;\n`\n\nconst HeaderItem = styled.div`\n  padding: 0 1rem;\n  /* border: 1px solid white; */\n  \n  a {\n    text-decoration: none;\n    transition: all .1s linear;\n\n\n    &.navlink-active p {\n      color: ${({theme: {primary}}) => primary[3]};\n    }\n\n    &:not(.navlink-active) div:hover {\n      cursor: pointer;\n    }\n  }\n\n`;\n\nconst HeaderNav = styled.header`\n`;\n\nconst TopNav = () => {\n  const [menuAnchor, setMenuAnchor] = useState()\n  const {loading, data, error} = useCheckAuthQuery();\n  console.log('[index] data: ', data)\n  const [signOut, {}] = useMutation(FB_LOGOUT_USER, {\n    refetchQueries: [{query: CHECK_AUTH}]\n  });\n  let menu = null\n\n  if (loading) {\n    menu = loading\n  } else if (error || (!loading && (!data.checkAuth))) {\n    signOut()\n  } else {\n    const {username, email} = data.checkAuth;\n\n\n    menu = (\n      <ul style={{display: 'flex', listStyleType: 'none'}}>\n        {Object.entries(links(username)).map(([key, {to, text}]) => (\n          <li>\n          <HeaderItem key={key}>\n            <NavLink to={to} activeClassName=\"navlink-active\">\n              <Typography>\n                {text}\n              </Typography>\n            </NavLink>\n          </HeaderItem>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  return (\n    <HeaderNav>\n      <HeaderItems>\n        <HeaderItem>\n          <Typography fontSize=\"2.8rem\">\n            <InlineBrand />\n          </Typography>\n        </HeaderItem>\n        <FlexSpacer />\n        {/* @TODO: User / Logout */}\n        {menu}\n      </HeaderItems>\n    </HeaderNav>\n  )\n}\nexport default TopNav;","/Users/kylemurray/apollo-file-upload/client/src/components/Search/components/Search/index.js",["291","292"],"import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport Container from '@material-ui/core/Container';\nimport {SearchField, TrackList} from './components';\n\nconst searchLists = [\n  {\n    key: 'artists',\n    text: 'Artists',\n    queryType: '_artist'\n  },\n  {\n    key: 'titles',\n    text: 'Titles',\n    queryType: '_title'\n  },\n  {\n    key: 'keywords',\n    text: 'Keyword Search',\n    queryType: 'keywords'\n  },\n]\n\nconst TracksPageContainer = styled(Container)`\n  && {\n    background-color: ${({theme: {primary}}) => primary[0]}\n  }\n`\n\nconst SearchTracks = () => {\n  const [query, setQuery] = useState('')\n  const onChange = e => setQuery(e.target.value.toLowerCase());\n\n  return (\n    <TracksPageContainer>\n      <SearchField onChange={onChange} />\n\n      {searchLists.map((list, idx) => (\n        <TrackList key={list.key} query={query} list={list} />\n      ))}\n    </TracksPageContainer>\n  )\n}\n\nexport default SearchTracks;\n","/Users/kylemurray/apollo-file-upload/client/src/components/Search/components/Search/components/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Search/components/Search/components/search-field.search.js",["293","294"],"import React from 'react';\nimport styled from 'styled-components'\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst SearchBox = styled(Box)`\n  padding: 60px 0;\n`\nconst SearchText = styled((props) => {\n  return(\n  <TextField classes={{root: 'root'}} {...props} />\n  )}\n)`\n  &.root {\n    padding: 1rem;\n    background-color: ${({theme: {primary}}) => primary[2]};\n\n    & input, svg {\n      font-size: 2.4rem;\n      color: white;\n    }\n  }\n`;\n\nconst SearchField = ({onChange}) => {\n  return (\n    <SearchBox width={1} display=\"flex\" justifyContent=\"center\">\n      <SearchText\n        onChange={onChange}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n    </SearchBox>\n  )\n}\n\nexport default SearchField;\n","/Users/kylemurray/apollo-file-upload/client/src/components/Search/components/Search/components/track-list.search.js",["295","296","297","298","299"],"import React, {useEffect} from 'react';\nimport { useQuery, useLazyQuery} from \"@apollo/client\";\nimport styled from 'styled-components';\nimport {TRACKS_QUERY, DOWNLOAD_TRACKS} from '../../../../apollo';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport axios from 'axios';\nimport fileDownload from 'js-file-download'\n\n\nconst QuerySection = styled(Container)`\n  && {\n    padding: 40px 0;\n    background-color: ${({theme: {primary}}) => primary[0]};\n\n    /* &:first-of-type {\n      border-top: 1px solid grey;\n    } */\n    &:not(:last-of-type) {\n      border-bottom: 1px solid ${({theme: {primary}}) => primary[2]};\n    }\n  }\n`\n\nconst StyledTableRow = styled(TableRow)`\n  background-color: ${({theme: {primary}}) => primary[1]};\n\n  &:nth-of-type(odd) {\n    background-color: ${({theme: {primary}}) => primary[2]};\n  }\n\n  :hover {\n    background-color: ${({theme: {primary}}) => primary[3]};\n  }\n`\n\nconst StyledTableCell = styled(TableCell)`\n`\n\nconst TracksTable = styled(Table)`\n  background-color: ${({theme: {black}}) => black};\n  \n  & th, td {\n    color: ${({theme: {text}}) => text.white};\n    font-family: 'Barlow Condensed', sans-serif;\n  }\n`\n\nexport const localAPI = ({url, ...props}) => {\n  const body = JSON.stringify({\n    ...props\n  });\n  let options = {\n    url,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data: body,\n    responseType: 'blob',\n  };\n\n  return axios(options)\n}\n\nconst downloadTrack = async({filename}) => {\n  try {\n    const res = await localAPI({url: 'http://localhost:4000/download', filename});\n    fileDownload(new Blob([res.data]), filename)\n  } catch (err) {\n    console.log('[track-list.search] err.message: ', err.message)\n  }\n}\n\nconst DataRow = ({data: {title, artist, bpm, key, filename}, idx}) => {\n  const [\n    retrieveTrackFromStorage,\n    { loading }\n  ] = useLazyQuery(DOWNLOAD_TRACKS, {\n    fetchPolicy: \"network-only\",\n    onCompleted: () => downloadTrack({filename}),\n    // onError: err => null, display error popup,\n  })\n\n  return (\n    <StyledTableRow key={idx}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {title}\n      </StyledTableCell>\n      <StyledTableCell align=\"right\">{artist}</StyledTableCell>\n      <StyledTableCell align=\"right\">{bpm}</StyledTableCell>\n      <StyledTableCell align=\"right\">{key}</StyledTableCell>\n      <StyledTableCell align=\"right\">{filename}</StyledTableCell>\n      <StyledTableCell align=\"right\">\n        {loading ? <div>...retrieving...</div> : (\n          <>\n          <div onClick={() => retrieveTrackFromStorage({variables: {filename}})}>\n            Select\n            \n          </div>\n          {/* {data && data.retrieveTrackFromStorage === 'Success' && (\n            <div onClick={() => localAPI({url: 'http://localhost:4000/download', filename})}>\n              Download\n            </div>\n          )} */}\n          </>\n        )\n        }\n      </StyledTableCell>\n    </StyledTableRow>\n  )\n}\n\nconst TrackList = ({query = '', list: {key, text, queryType = 'artist'}}) => {\n  const {data, error, loading} = useQuery(TRACKS_QUERY, {\n    variables: {query, queryType}\n  })\n\n  let rows = undefined\n  if (data) {\n    rows = data.searchTracks\n  }\n  \n\n  if (!rows || !rows.length) {\n    return null\n  }\n\n  // if (loading) return <div>...searching...</div>\n  if (error) return <div>...error...</div>\n\n  return (\n    <QuerySection key={key}>\n      <Typography variant=\"h5\">\n        {text}\n      </Typography>\n      {rows && loading ? <div>...searching...</div> : (\n      <TableContainer component={Paper}>\n      <TracksTable aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Song Title</TableCell>\n            <TableCell align=\"right\">Artist</TableCell>\n            <TableCell align=\"right\">BPM</TableCell>\n            <TableCell align=\"right\">Key</TableCell>\n            <TableCell align=\"right\">Filename</TableCell>\n            <TableCell align=\"right\">\n              Download\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, idx) => (\n            <DataRow key={idx} idx={idx} data={row} />\n          ))}\n        </TableBody>\n      </TracksTable>\n    </TableContainer>)}\n    </QuerySection>\n  )\n}\n\nexport default TrackList;\n","/Users/kylemurray/apollo-file-upload/client/src/components/ui/containers/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/flex-util/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/buttons/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/index.js",["300","301","302","303"],"import React, {useState} from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport {TRACK_UPLOAD} from 'components/apollo'\nimport {useForm} from 'react-hook-form'\nimport {TagList, TagInput} from './tags';\nimport {TrackInfoHeader} from './header';\nimport Legend from './legend';\nimport {\n  uploadFilenameController,\n  trackTitleController,\n  artistController,\n  bpmController,\n  genreController,\n  trackDurationController,\n  trackKeyController,\n} from './controllers';\nimport {FlexGridItem} from 'components/ui'\nimport {filenameFormatTuple, findKey, keyTable, getKeywords} from './util';\nimport {toTitleCase} from 'components/util';\nimport {UploadCard, FormRow, KeyDisplay} from './upload-form.styles';\nimport UploadField from './upload-field';\n\nexport const UploadForm = ({metadata: {\n  title, filename: _filename, format, artist, duration, bpm, key, genre: genreArray\n}, unstageTracks}) => {\n\n  // CREATED FORM VARIABLES\n  const songLength = `${Math.floor(duration / 60)}:${Math.floor(duration % 60).toString().padStart(2, \"0\")}`\n  const [_format, filename] = filenameFormatTuple(_filename);\n  const genre = genreArray.length !== 0 && genreArray[0].toLowerCase() || '';\n  const initialValues = {\n    title,\n    filename,\n    _filename,\n    artist,\n    duration: songLength,\n    bpm,\n    key,\n    genre,\n  };\n\n  // FORM\n  const {register, errors, control, getValues} = useForm({\n    defaultValues: {...initialValues}\n  });\n\n  // GQL\n  const [trackUpload, {loading, data, error}] = useMutation(TRACK_UPLOAD, {\n    onCompleted: (x) => {\n      console.log(x)\n    }\n  })\n\n  // STATE MANAGEMENT\n  const [{keywords, custom}, setTags] = useState({\n    keywords: getKeywords({title, artist, genre}),\n    custom: [],\n  });\n  const [editInputs, setEditInputs] = useState({\n    filename: false,\n    trackTitle: false,\n    artist: false,\n    trackDuration: false,\n    bpm: false,\n    trackKey: false,\n    genre: false,\n  })\n\n  // METHODS\n  const removeTag = (idx) => {\n    const newTags = [...custom];\n    newTags.splice(idx, 1)\n    setTags({\n      keywords,\n      custom: newTags\n    })\n  };\n  \n  const addTag = (newTag) => {\n    if (newTag.length) {\n      const newTags = [...custom]; \n      newTags.push(newTag);\n      setTags({\n        keywords,\n        custom: newTags\n      })\n    }\n  };\n\n  const onClickEdit = (key) => setEditInputs({...editInputs, [key]: true});\n\n  const handleUnstage = () => {\n    unstageTracks({variables: {files: [_filename]}})\n  };\n\n  const handleUpload = () => {\n    const newValues = {\n      ...initialValues,\n      ...getValues()\n    };\n\n    const _artist = newValues.artist.toLowerCase();\n    const _title = newValues.title.toLowerCase();\n    \n    const [min, sec] = newValues.duration.split(':');\n    const intDuration = +min * 60 + +sec;\n\n    const entry = {\n      ...newValues,\n      \n      filename: newValues.filename + _format,\n      duration: intDuration,\n      genre: newValues.genre.toLowerCase(),\n      _filename,\n      key: findKey(newValues.key) || '0',\n      //  @TODO: grab from auth\n      uploader: 'indy',\n      keywords: [...keywords, ...custom],\n      _artist,\n      _title\n    }\n\n    trackUpload({variables: {entry}}).then(({data: {trackUpload: errors}}) => {\n      if (!errors.length) {\n        unstageTracks({variables: {files: [_filename]}})\n      }\n    })\n  };\n\n  const _getKeyString = (key) => {\n    if (!key) return '--'\n\n    const [fifth, openKey] = keyTable[key]\n\n    return (\n      <KeyDisplay>\n        <span>{key}</span>\n        <span>--</span>\n        <span>{fifth}</span>\n        <span>--</span>\n        <span>{openKey}</span>\n      </KeyDisplay>\n    )\n  }\n\n  if (loading) {\n    return <div>...Uploading...</div>\n  }\n\n  if (error) {\n    return <div>...Error...</div>\n  }\n\n  const formInputRows = [\n    {\n      \"track-title\": {\n        gridItem: {},\n        uploadField: {\n          label: \"Track title\",\n          control,\n          onClickEdit: () => onClickEdit('trackTitle'),\n          isEditing: editInputs.trackTitle,\n          inputField: trackTitleController({control}),\n          required: true,\n          prefill: title,\n        },\n      },\n      artist: {\n        gridItem: {},\n        uploadField: {\n          label: \"Artist\",\n          control,\n          onClickEdit: () => onClickEdit('artist'),\n          isEditing: editInputs.artist,\n          inputField: artistController({\n            control,\n            // @TODO: error doesn't work\n            ref: register({\n              required: true,\n              maxLength: 50,\n            })\n          }),\n          required: true,\n          prefill: artist,\n        },\n      },\n    },\n    {\n      length: {\n        gridItem: {xs: 2},\n        uploadField: {\n          label: \"Length\",\n          onClickEdit: () => onClickEdit('trackDuration'),\n          isEditing: editInputs.trackDuration,\n          inputField: trackDurationController({control}),\n          metadata: `${duration}s`,\n          prefill: songLength,\n        },\n      },\n      bpm: {\n        gridItem: {xs: 2},\n        uploadField: {\n          label: \"BPM\",\n          onClickEdit: () => onClickEdit('bpm'),\n          isEditing: editInputs.bpm,\n          inputField: bpmController({control}),\n          metadata: bpm,\n          prefill: bpm,\n        },\n      },\n      \"track-key\": {\n        gridItem: {xs: 4},\n        uploadField: {\n          control,\n          label: \"Key\",\n          onClickEdit: () => onClickEdit('trackKey'),\n          isEditing: editInputs.trackKey,\n          inputField: trackKeyController({control}),\n          metadata: key,\n          prefill: _getKeyString(findKey(key)),\n        },\n      },\n      genre: {\n        gridItem: {xs: 4},\n        uploadField: {\n          label: \"Genre\",\n          onClickEdit: () => onClickEdit('genre'),\n          isEditing: editInputs.genre,\n          inputField: genreController({control}),\n          metadata: genre,\n          required: true,\n          prefill: toTitleCase(genre),\n        },\n      },\n    },\n    {\n      _filename: {\n        gridItem: {xs: 5},\n        uploadField: {\n          label: \"Filename\",\n          prefill: _filename,\n        },\n      },\n      format: {\n        gridItem: {xs: 1},\n        uploadField: {\n          label: \"Format\",\n          prefill: format,\n        },\n      },\n      filename: {\n        gridItem: {xs: 6},\n        uploadField: {\n          label: \"Upload as\",\n          onClickEdit: () => onClickEdit('filename'),\n          isEditing: editInputs.filename,\n          inputField: uploadFilenameController({control, _format}),\n          prefill: _filename,\n        },\n      },\n    },\n  ]\n\n  return (\n    <UploadCard>\n      <TrackInfoHeader upload={handleUpload} unstage={handleUnstage}/>\n      {formInputRows.map((row, i) => (\n        <FormRow className=\"form-row\" key={`row-${i}`}>\n          {Object.entries(row).map(([id, item]) => (\n            <FlexGridItem key={id} {...item.gridItem}>\n              <UploadField {...item.uploadField} />\n            </FlexGridItem>\n          ))}\n        </FormRow>\n      ))}\n      <FormRow className=\"form-row\">\n        <TagList keywords={keywords} custom={custom} removeTag={removeTag} />\n      </FormRow>\n      <FormRow className=\"form-row\">\n        <TagInput addTag={addTag} />\n      </FormRow>\n      <Legend />\n    </UploadCard>\n    )\n}","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/header/index.js",["304","305"],"import React from 'react';\nimport {Wrapper, UploadButtonsWrapper, HeaderText} from './header.styles';\nimport {FlexSpacer, MyButton} from 'components/ui';\n\nexport const TrackInfoHeader = ({upload, unstage}) => {\n  return (\n    <Wrapper className=\"track-info__header--wrapper\">\n      <HeaderText>Track Information</HeaderText>\n      <FlexSpacer />\n      <UploadButtonsWrapper>\n        <MyButton onClick={upload}>Upload</MyButton>\n        <MyButton type=\"error\" className=\"my-button--cancel\" onClick={unstage}>Unstage</MyButton>\n      </UploadButtonsWrapper>\n    </Wrapper>\n  )\n};\n","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/bpm.controller.js",["306","307","308"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from '../../../ui'\n\nconst bpmController = ({control, ...props}) => (\n  <Controller\n    control={control}\n    name=\"bpm\"\n    render={(\n      {onChange, value, name},\n    ) => (\n      <MyInputField\n        inputProps = {{\n          name,\n          value,\n          onChange,\n        }}\n      />\n    )}\n  />\n);\n\nexport default bpmController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/genre.controller.js",["309","310","311","312","313"],"import {Controller} from 'react-hook-form'\nimport {useQuery} from \"@apollo/client\";\nimport {MyInputField} from '../../../ui'\nimport {GENRES_QUERY} from 'components/apollo'\nimport {toTitleCase} from 'components/util';\n\nimport React, {useState, useEffect} from 'react';\n\nconst GenreSuggest = ({setValue}) => {\n  const [suggestions, setSuggestions] = useState({\n    list: [],\n    text: ''\n  });\n  const [genres, setGenres] = useState([])\n  const {data, error, loading} = useQuery(GENRES_QUERY, {\n    onCompleted: () => setGenres(data && data.getAllGenres.map(({name}) => (name)))\n  })\n\n  const handleChange = ({target: {value}}) => {\n    if (loading) return;\n    let newSuggestions = [];\n    if (value.length > 0) {\n      const regex = new RegExp(`${value}`, `i`);\n      newSuggestions = genres.filter(v => regex.test(v)).sort();\n    }\n\n    setSuggestions({\n      list: newSuggestions,\n      text: value,\n    });\n  }\n\n  // const handleBlur = () => setValue(suggestions.text);\n\n  const suggestionSelected = (value) => {\n    setSuggestions({\n      list: [],\n      text: value,\n    });\n    setValue(value);\n  }\n \n  const renderSuggestions = () => {\n    if (!suggestions.list.length) {\n      return null;\n    }\n    return (\n      <ul>\n        {suggestions.list.map(genre => (\n          <li key={genre} onClick={()=>suggestionSelected(genre)}>\n            {toTitleCase(genre)}\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  return (\n    <div>\n      <input\n        name=\"genre\"\n        onChange={handleChange}\n        // onBlur={handleBlur}\n        placeholder=\"Search for or add genre\"\n        value={suggestions.text}\n        type=\"text\"\n      />\n      {renderSuggestions()}\n    </div>\n  );\n}\n\nconst genreController = ({control, ...props}) => (\n  <Controller\n    control={control}\n    name=\"genre\"\n    render={(\n      {onChange, value, name},\n    ) => (\n      <MyInputField\n        inputProps = {{\n          name,\n          value,\n          onChange,\n        }}\n        render = {<GenreSuggest setValue={onChange} />}\n      />\n    )}\n  />\n);\n\nexport default genreController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-duration.controller.js",["314","315","316"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from '../../../ui'\n\nconst trackDurationController = ({control, ...props}) => {\n  const handleLengthChange = (idx, subValue, value) => {\n    if (!idx && subValue > 99) return value;\n    if (idx && subValue > 59) return value;\n    console.log('[upload-form.component] subValue: ', subValue)\n    const lengthArray = value.split(':');\n    lengthArray[idx] = subValue.slice(-2);\n    return lengthArray.join(':');\n  };\n\n  return (\n    <Controller\n        control={control}\n        name=\"duration\"\n        rules={{required: true}}\n        render={(\n          {value, name, onChange},\n        ) => (\n          <MyInputField\n            inputProps = {{\n              name,\n              value,\n            }}\n            render = {(\n              <>\n                <input value={value.split(':')[0]} type=\"number\" min=\"0\" onChange={({target: {value: subValue}}) => onChange(handleLengthChange(0, subValue, value))} />\n                  <span>:</span>\n                <input value={value.split(':')[1].padStart(2, '0')} type=\"number\" min=\"0\" onChange={({target: {value: subValue}}) => onChange(handleLengthChange(1, subValue, value))}/>\n              </>\n            )}\n          />\n        )}\n      />\n  )\n};\n\nexport default trackDurationController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-key.controller.js",["317","318","319"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from 'components/ui'\nimport {keyTable} from '../util';\n\nconst KeySelect = ({selected, onChange}) => {\n  const keyTableOptions = Object.entries(keyTable).map(([camelot, [fifth, openKey]]) => (\n    {value: camelot, label: `${camelot} - ${fifth} - ${openKey}`}\n  ))\n\n  const selectOptions = {\n    defaultValue: selected === -1 ? 'na' : Object.keys(keyTable)[selected],\n    onChange: onChange,\n  }\n  \n  return (\n    <select {...selectOptions} style={{color: 'black'}}>\n      <option value=\"na\">--</option>\n      {keyTableOptions.map(({value, label}, idx) => (\n        <option key={`key-option${idx}`} value={value}>{label}</option>\n      ))}\n    </select>\n  )\n}\n\nconst trackKeyController = ({control, ...props}) => (\n  <Controller\n    control={control}\n    name=\"key\"\n    render={(\n      {onChange, value, name},\n    ) => (\n      <MyInputField\n        inputProps = {{\n          name,\n          value,\n          onChange,\n        }}\n        render = {\n          // <Select name={name} onChange={({value}) => onChange(value)} options={keyTableOptions} />\n          <KeySelect onChange={onChange} />\n        }\n      />\n    )}\n  />\n);\n\nexport default trackKeyController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/artist.controller.js",["320","321","322"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from '../../../ui'\n\nconst artistController = ({control, ref, ...props}) => (\n  <Controller\n    control={control}\n    name=\"artist\"\n    rules={{required: true}}\n    render={(\n      {onChange, value, name},\n    ) => (\n      <MyInputField\n        inputProps = {{\n          name,\n          value,\n          onChange,\n          ref\n        }}\n      />\n    )}\n  />\n);\n\nexport default artistController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/header/header.styles.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/upload-filename.controller.js",["323","324"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from '../../../ui'\n\nconst uploadFilenameController = ({control, ...props}) => (\n  <Controller\n    control={control}\n    name=\"filename\"\n    render={(\n      {value, name, onChange},\n    ) => {\n      return(\n        <MyInputField\n          suffix={props._format}\n          inputProps = {{\n            name,\n            value,\n            onChange,\n          }}\n        />\n    )}}\n  />\n);\n\nexport default uploadFilenameController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-title.controller.js",["325","326","327"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from 'components/ui'\n\nconst trackTitleController = ({control, ...props}) => (\n  <Controller\n    control={control}\n    name=\"title\"\n    rules={{required: true}}\n    render={(\n      {onChange, value, name},\n    ) => (\n      <MyInputField\n        inputProps = {{\n          name,\n          value,\n          onChange,\n        }}\n      />\n    )}\n  />\n);\n\nexport default trackTitleController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-form.styles.js",["328"],"import styled from 'styled-components';\nimport {Card} from 'components/ui';\nimport {FlexRow, FlexGridItem} from 'components/ui'\n\nexport const UploadCard = styled(Card)`\n  &:not(:first-of-type){\n    margin-top: 20px;\n  }\n`\n\nexport const FormRow = styled(FlexRow)`\n  > :not(:first-child) {\n    padding-left: 2rem;\n  }\n\n  &:not(:first-of-type) {\n    padding-top: 1.2rem;\n  }\n`;\n\nexport const KeyDisplay = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: space-between;\n  padding-right: 1rem;\n`","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-field/index.js",["329","330"],"import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  FUFWrapper,\n  FUFLabelWrapper,\n  FUFLabel,\n  FUFValue,\n  FUFEditWrapper,\n  FUFMetadata,\n} from './upload-field.styles';\n\nconst FUFEdit = ({onClick}) => {\n  return (\n    <FUFEditWrapper onClick={onClick}>\n      <FontAwesomeIcon size=\"xs\" icon={faPencilAlt} />\n    </FUFEditWrapper>\n  )\n}\n\nconst UploadField = ({\n  label,\n  onClickEdit = null,\n  isEditing = false,\n  metadata = '',\n  inputField = null,\n  prefill,\n  required\n}) => {\n  return (\n    <FUFWrapper>\n      <FUFLabelWrapper>\n        <FUFLabel>{required && '*'}{label}:</FUFLabel>\n        {!!metadata.length && <FUFMetadata>({metadata})</FUFMetadata>}\n      </FUFLabelWrapper>\n      {isEditing || (required && !prefill.length) ? inputField : (\n        <FUFValue>\n          {prefill}\n          {!!onClickEdit && <FUFEdit onClick={onClickEdit} />}\n        </FUFValue>\n      )}\n    </FUFWrapper>\n  )\n}\n\nexport default UploadField;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-field/upload-field.styles.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tag-list.js",["331","332"],"import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport {\n  Wrapper, TagsWrapper, TagLabel, TagClose, TagWrapper\n} from './tags.styles';\n\nconst TagList = ({keywords = [], custom = [], removeTag}) => {\n  const _makeTags = (list, clearable = false) => (\n    list.map((x, idx) => (\n      <TagWrapper key={x + idx} clearable={clearable}>\n        {clearable && (<TagClose onClick={() => removeTag(idx)}><FontAwesomeIcon icon={faTimesCircle} /></TagClose>)}\n        <TagLabel className=\"tag-label\">{x}</TagLabel>\n      </TagWrapper>\n    ))\n  );\n\n  return (\n    <Wrapper> \n      <TagsWrapper>\n        {[ _makeTags(keywords), _makeTags(custom, true)]}\n      </TagsWrapper>\n    </Wrapper>\n  )\n}\n\nexport default TagList;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tag-input.js",["333","334"],"import React, {useState} from 'react';\nimport {TagInputWrapper, TagInputSubmit} from './tags.styles';\nimport {MyInputField} from 'components/ui'\n\nconst TagInput = ({addTag}) => {\n  const [newTag, setNewTag] = useState('');\n  const handleChange = ({target: {value}}) => {\n    const allowAlnum = /[^a-z0-9\\s]/i\n    setNewTag(value.replace(allowAlnum, '').toLowerCase());\n  }\n  const handleSubmit = () => {\n    addTag(newTag);\n    setNewTag('');\n  }\n  const disabled = newTag.length === 0;\n\n  return (\n    <TagInputWrapper>\n      <MyInputField width=\"12rem\" inputProps={{onChange: handleChange, value: newTag, placeholder: \"ie: 'uplifting' or 'anjuna'\"}}/>\n      <TagInputSubmit onClick={handleSubmit} disabled={disabled}>Add Tag</TagInputSubmit>\n    </TagInputWrapper>\n  )\n}\n\nexport default TagInput;\n","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tags.styles.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/legend/index.js",["335","336"],"import React from 'react';\nimport {LegendRow} from './legend.styles';\n\nconst Legend = ({}) => (\n  <LegendRow className=\"upload-form__legend legend-row\">\n    <div className=\"legend\">\n      <span className=\"legend__required\">*required</span>\n      <span className=\"legend__metadata\">(indicates info taken from track metadata)</span>\n    </div>\n  </LegendRow>\n)\n\nexport default Legend","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/legend/legend.styles.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/util/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/util/index.js",["337","338","339","340","341","342"],"export const filenameFormatTuple = (_filename) => {\n  const filetypeRe = /\\.[0-9a-z]+$/i\n  const [_format] = _filename.match(filetypeRe);\n  const filename = _filename.replace(filetypeRe, '');\n\n  return [_format, filename];\n}\n\nexport const keyTable = {\n  '1a': ['Abmin', '6m'],\n  '2a': ['Ebmin', '7m'],\n  '3a': ['Bbmin', '8m'],\n  '4a': ['Fmin', '9m'],\n  '5a': ['Cmin', '10m'],\n  '6a': ['Gmin', '11m'],\n  '7a': ['Dmin', '12m'],\n  '8a': ['Amin', '1m'],\n  '9a': ['Emin', '2m'],\n  '10a': ['Bmin', '3m'],\n  '11a': ['F#min', '4m'],\n  '12a': ['Dbmin', '5m'],\n  '1b': ['Bmaj', '6d'],\n  '2b': ['F#maj', '7d'],\n  '3b': ['Dbmaj', '8d'],\n  '4b': ['Abaj', '9d'],\n  '5b': ['Ebaj', '10d'],\n  '6b': ['Bbmaj', '11d'],\n  '7b': ['Fmaj', '12d'],\n  '8b': ['Cmaj', '1d'],\n  '9b': ['Gmaj', '2d'],\n  '10b': ['Dmaj', '3d'],\n  '11b': ['Amaj', '4d'],\n  '12b': ['Emaj', '5d'],\n}\n\nexport const findKey = (key) => {\n  if (key.toLowerCase() in keyTable) return key.toLowerCase();\n\n  return Object.keys(keyTable).find(k => keyTable[k].find(x => {\n    return x.toLowerCase() === key.toLowerCase()\n  })) \n}\n\nexport const getKeywords = ({title, artist, genre}) => {\n  const keywords = [];\n\n  // Split title by word, remove parentheses\n  title.split(' ')\n    .forEach((x) => {\n      keywords.push(x.toLowerCase().replace(/\\W+/g, ''))\n    });\n  // Split artists and split artist names by whitespace\n  artist.split(', ')\n    .map(y => y.split(' ')).flat()\n    .forEach(z => {\n      keywords.push(z.toLowerCase())\n    });\n  genre.length !== 0 && keywords.push(genre);\n\n  return keywords;\n}","/Users/kylemurray/apollo-file-upload/client/src/components/util/string.util.js",["343","344"],"export const toTitleCase = (str) => {\n  return str.replace(\n    /\\w\\S*/g,\n    function(txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    }\n  );\n}","/Users/kylemurray/apollo-file-upload/client/src/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Auth/index.tsx",[],[],"/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth.styles.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/typography/index.tsx",["345"],"import React from 'react';\nimport {TypographyWrapper} from './typography.styles';\n\ninterface IStyleProps {\n  m?: string,\n  mt?: string,\n  mb?: string,\n  ml?: string,\n  mr?: string,\n  fontSize?: string,\n}\n\ninterface Props {\n  tag?: 'span' | 'div' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p' | 'pre',\n  // children: React.ReactChildren| React.ReactChild | JSX.Element | string,\n  fontSize?: string,\n  m?: string,\n  mt?: string,\n  mb?: string,\n  ml?: string,\n  mr?: string,\n}\n\nconst fetchJSXElement = (el: string) => {\n  switch(el) {\n    case \"div\":\n      return <div />\n    default:\n      return <span />\n  }\n} \n\nexport const Typography: React.FC<Props> = ({tag = 'p', children, fontSize, m, mt, mr, mb, ml}) => {\n  const TypographyTag = tag;\n  const styleProps: IStyleProps = {\n    m, mt, mr, mb, ml, fontSize\n  }\n\n  console.log('[index] m: ', m)\n\n  return (\n    <TypographyWrapper className=\"typography\" {...styleProps}>\n      <TypographyTag className=\"typography__tag\">\n        {children}\n      </TypographyTag>\n    </TypographyWrapper>\n  )\n}","/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/brand.components.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/typography/typography.styles.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/brand.styles.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth-form/index.tsx",["346","347"],"\nimport React, {useEffect, useState} from 'react';\nimport {Paper} from 'components/ui';\nimport {\n  ToggleState,\n  SignUpValues,\n} from 'types';\nimport styled from 'styled-components';\nimport {SignUp, SignIn} from './components';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column;\n  background-color: ${({theme: {primary}}) => primary[0]};\n  padding: 1rem 1rem;\n  max-width: 960px;\n  margin: 0 auto;\n  border-radius: ${({theme: {borderRadius}}) => borderRadius};\n`\n\nconst AuthForm: React.FC = () => {\n  const [isSignUp, setIsSignUp] = useState<boolean>(false);\n  const toggleIsSignUp: ToggleState = () => setIsSignUp(!isSignUp);\n\n  // @TODO: fix to isSignUp\n  const authForm = isSignUp ? <SignUp toggle={toggleIsSignUp} /> : <SignIn toggle={toggleIsSignUp} />;\n\n  return (\n    <Container>\n      <Paper>\n        {authForm}\n      </Paper>\n    </Container>\n  );\n}\n\nexport default AuthForm;\n","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth-form/components/index.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/global/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/dividers/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth-form/components/sign-in.auth.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth-form/components/sign-up.auth.tsx",["348","349","350","351","352"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useMutation } from \"@apollo/client\";\nimport * as yup from \"yup\";\nimport {Card, Typography, InlineBrand, MyInputField, MyButton, DividerLine} from 'components/ui';\nimport {\n  AuthForm as AuthFormWrapper,\n  AuthItemWrapper,\n  AuthErrorWrapper,\n  AuthSubContainer,\n  AuthToggleText\n} from './auth-form.styles';\nimport {ToggleState, SignUpValues, IInputFields} from 'types';\nimport {FB_CREATE_USER, CHECK_AUTH} from 'components/apollo';\n\nconst pwLength = 'Password must be between 8 and 26 characters in length';\n\nconst schema = yup.object().shape({\n  username: yup.string().required(),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(8, pwLength).max(26, pwLength).matches(\n    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n    \"Must contain at least 1 uppercase, 1 lowercase, 1 \\\n    number and at least one special case character from @$!%*#?&\"\n  ),\n  confirmPassword: yup.string()\n  .oneOf([yup.ref('password'), null], 'Passwords must match'),\n});\n\ninterface Props {\n  toggle: ToggleState;\n}\n\nconst SignUp: React.FC<Props> = ({toggle}) => {\n  const { register, handleSubmit, errors, reset, setError } = useForm<SignUpValues>({\n    resolver: yupResolver(schema),\n  });\n  const [fbCreateUser, {loading, error: fbError, data: fbData}] = useMutation(FB_CREATE_USER, {\n    refetchQueries: (x) => {\n      if (x?.signInWithEmailAndPassword?.error) return [];\n      return [{query: CHECK_AUTH}]\n    }\n  })\n\n  const onSubmit = async (values: SignUpValues): Promise<void> => {\n    const {email, password, username} = values;\n    const {data: {createUserWithEmailAndPassword}} = await fbCreateUser({variables: {email, password, username}});\n    const authErr = createUserWithEmailAndPassword.error\n\n    if (authErr) {\n      const [_, name] = authErr.code.split('/');\n\n      switch(name) {\n        case 'email':\n          break;\n          setError(\"email\", {message: authErr.message})\n        default:\n          setError(\"username\", {message: authErr.message})\n          break;\n      }\n\n      \n    }\n  }\n\n  const inputFields: IInputFields = {\n    username: {\n      label: 'Username',\n      placeholder: \"Username\",\n      error: errors?.username?.message,\n      autoComplete: 'off',\n    },\n    email: {\n      label: 'Email',\n      placeholder: \"Your email address\",\n      autoComplete: 'off',\n      error: errors?.email?.message,\n    },\n    password: {\n      label: 'Password',\n      placeholder: \"Password\",\n      type: 'password',\n      error: errors?.password?.message\n    },\n    confirmPassword: {\n      label: 'Confirm Password',\n      placeholder: \"Confirm Password\",\n      type: 'password',\n      error: errors?.confirmPassword?.message\n    },\n  };\n\n  return (\n    <Card>\n      <AuthSubContainer>\n        <Typography tag=\"h1\">Sign Up for <InlineBrand /></Typography>\n        <Typography mt=\".5rem\">It's free to view our music library!</Typography>\n      </AuthSubContainer>\n      <AuthFormWrapper>\n        {Object.entries(inputFields).map(([id, {label, error, ...props}]) => (\n          <AuthItemWrapper key={id}>\n            <MyInputField\n              label={label}\n              inputProps={{\n                name: id,\n                ref: register,\n                ...props,\n              }}\n            />\n            {error && (\n              <AuthErrorWrapper>\n                {error}\n              </AuthErrorWrapper>\n            )}\n          </AuthItemWrapper>\n        ))}\n      </AuthFormWrapper>\n      <AuthSubContainer className=\"auth-button\">\n        <MyButton onClick={handleSubmit(onSubmit)}>sign up</MyButton>\n      </AuthSubContainer>\n      \n      <DividerLine />\n      <AuthSubContainer>\n        <div>\n        Already a&nbsp;<InlineBrand />&nbsp;user?&nbsp;\n          <AuthToggleText onClick={toggle}>\n            Sign in instead!\n          </AuthToggleText>\n        </div>\n      </AuthSubContainer>\n    </Card>\n  )\n} ;\n\nexport default SignUp\n","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/auth-form/components/auth-form.styles.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/generated/graphql.tsx",["353","354","355","356","357","358"],"import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nconst defaultOptions =  {}\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\nexport type Query = {\n  __typename?: 'Query';\n  _empty?: Maybe<Scalars['String']>;\n  stagedTracks?: Maybe<Array<Maybe<Track>>>;\n  searchTracks?: Maybe<Array<Maybe<Track>>>;\n  retrieveTrackFromStorage?: Maybe<Scalars['String']>;\n  getAllGenres?: Maybe<Array<Maybe<Genre>>>;\n  checkAuth?: Maybe<Auth>;\n};\n\n\nexport type QuerySearchTracksArgs = {\n  query: Scalars['String'];\n  queryType: Scalars['String'];\n};\n\n\nexport type QueryRetrieveTrackFromStorageArgs = {\n  filename?: Maybe<Scalars['String']>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  _empty?: Maybe<Scalars['String']>;\n  stageTracks?: Maybe<Scalars['Boolean']>;\n  trackUpload?: Maybe<Array<Maybe<Scalars['String']>>>;\n  unstageTracks?: Maybe<Scalars['Boolean']>;\n  updateUser?: Maybe<User>;\n  addUser?: Maybe<User>;\n  createUserWithEmailAndPassword?: Maybe<Auth>;\n  signInWithEmailAndPassword?: Maybe<Auth>;\n  signOut?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationStageTracksArgs = {\n  files?: Maybe<Array<Scalars['Upload']>>;\n};\n\n\nexport type MutationTrackUploadArgs = {\n  entry?: Maybe<TrackInput>;\n};\n\n\nexport type MutationUnstageTracksArgs = {\n  files?: Maybe<Array<Scalars['String']>>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  user?: Maybe<UserInput>;\n};\n\n\nexport type MutationAddUserArgs = {\n  user?: Maybe<UserInput>;\n};\n\n\nexport type MutationCreateUserWithEmailAndPasswordArgs = {\n  email?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  username?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationSignInWithEmailAndPasswordArgs = {\n  email?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n};\n\nexport type Track = {\n  __typename?: 'Track';\n  id?: Maybe<Scalars['String']>;\n  uploader?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  artist?: Maybe<Scalars['String']>;\n  artists?: Maybe<Array<Maybe<Scalars['String']>>>;\n  duration?: Maybe<Scalars['Int']>;\n  key?: Maybe<Scalars['String']>;\n  bpm?: Maybe<Scalars['String']>;\n  genre?: Maybe<Array<Maybe<Scalars['String']>>>;\n  keywords?: Maybe<Array<Maybe<Scalars['String']>>>;\n  storageBucket?: Maybe<Scalars['String']>;\n  filename?: Maybe<Scalars['String']>;\n  format?: Maybe<Scalars['String']>;\n};\n\nexport type TrackInput = {\n  uploader?: Maybe<Scalars['String']>;\n  _uploader?: Maybe<Scalars['String']>;\n  title: Scalars['String'];\n  _title?: Maybe<Scalars['String']>;\n  artist?: Maybe<Scalars['String']>;\n  _artist?: Maybe<Scalars['String']>;\n  artists?: Maybe<Array<Maybe<Scalars['String']>>>;\n  duration?: Maybe<Scalars['Int']>;\n  key?: Maybe<Scalars['String']>;\n  bpm?: Maybe<Scalars['String']>;\n  genre?: Maybe<Scalars['String']>;\n  keywords?: Maybe<Array<Maybe<Scalars['String']>>>;\n  storageBucket?: Maybe<Scalars['String']>;\n  filename: Scalars['String'];\n  _filename: Scalars['String'];\n  format?: Maybe<Scalars['String']>;\n};\n\nexport type User = {\n  __typename?: 'User';\n  username: Scalars['String'];\n  uploads?: Maybe<Array<Maybe<Scalars['String']>>>;\n  downloads?: Maybe<Array<Maybe<Scalars['String']>>>;\n  role?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  _username?: Maybe<Scalars['String']>;\n  uploads?: Maybe<Array<Maybe<Scalars['String']>>>;\n  downloads?: Maybe<Array<Maybe<Scalars['String']>>>;\n  roles?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type Genre = {\n  __typename?: 'Genre';\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type AuthError = {\n  __typename?: 'AuthError';\n  code?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n};\n\nexport type Auth = {\n  __typename?: 'Auth';\n  email?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  username?: Maybe<Scalars['String']>;\n  error?: Maybe<AuthError>;\n};\n\nexport enum CacheControlScope {\n  Public = 'PUBLIC',\n  Private = 'PRIVATE'\n}\n\n\nexport type CreateUserWithEmailAndPasswordMutationVariables = Exact<{\n  email?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  username?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CreateUserWithEmailAndPasswordMutation = (\n  { __typename?: 'Mutation' }\n  & { createUserWithEmailAndPassword?: Maybe<(\n    { __typename?: 'Auth' }\n    & Pick<Auth, 'email' | 'password' | 'username'>\n    & { error?: Maybe<(\n      { __typename?: 'AuthError' }\n      & Pick<AuthError, 'code' | 'message'>\n    )> }\n  )> }\n);\n\nexport type SignInWithEmailAndPasswordMutationVariables = Exact<{\n  email?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type SignInWithEmailAndPasswordMutation = (\n  { __typename?: 'Mutation' }\n  & { signInWithEmailAndPassword?: Maybe<(\n    { __typename?: 'Auth' }\n    & Pick<Auth, 'email' | 'username'>\n    & { error?: Maybe<(\n      { __typename?: 'AuthError' }\n      & Pick<AuthError, 'code' | 'message'>\n    )> }\n  )> }\n);\n\nexport type SignOutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type SignOutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'signOut'>\n);\n\nexport type CheckAuthQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type CheckAuthQuery = (\n  { __typename?: 'Query' }\n  & { checkAuth?: Maybe<(\n    { __typename?: 'Auth' }\n    & Pick<Auth, 'email' | 'username'>\n    & { error?: Maybe<(\n      { __typename?: 'AuthError' }\n      & Pick<AuthError, 'code' | 'message'>\n    )> }\n  )> }\n);\n\n\nexport const CreateUserWithEmailAndPasswordDocument = gql`\n    mutation CreateUserWithEmailAndPassword($email: String, $password: String, $username: String) {\n  createUserWithEmailAndPassword(\n    email: $email\n    password: $password\n    username: $username\n  ) {\n    email\n    password\n    username\n    error {\n      code\n      message\n    }\n  }\n}\n    `;\nexport type CreateUserWithEmailAndPasswordMutationFn = Apollo.MutationFunction<CreateUserWithEmailAndPasswordMutation, CreateUserWithEmailAndPasswordMutationVariables>;\n\n/**\n * __useCreateUserWithEmailAndPasswordMutation__\n *\n * To run a mutation, you first call `useCreateUserWithEmailAndPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateUserWithEmailAndPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createUserWithEmailAndPasswordMutation, { data, loading, error }] = useCreateUserWithEmailAndPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      username: // value for 'username'\n *   },\n * });\n */\nexport function useCreateUserWithEmailAndPasswordMutation(baseOptions?: Apollo.MutationHookOptions<CreateUserWithEmailAndPasswordMutation, CreateUserWithEmailAndPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<CreateUserWithEmailAndPasswordMutation, CreateUserWithEmailAndPasswordMutationVariables>(CreateUserWithEmailAndPasswordDocument, options);\n      }\nexport type CreateUserWithEmailAndPasswordMutationHookResult = ReturnType<typeof useCreateUserWithEmailAndPasswordMutation>;\nexport type CreateUserWithEmailAndPasswordMutationResult = Apollo.MutationResult<CreateUserWithEmailAndPasswordMutation>;\nexport type CreateUserWithEmailAndPasswordMutationOptions = Apollo.BaseMutationOptions<CreateUserWithEmailAndPasswordMutation, CreateUserWithEmailAndPasswordMutationVariables>;\nexport const SignInWithEmailAndPasswordDocument = gql`\n    mutation SignInWithEmailAndPassword($email: String, $password: String) {\n  signInWithEmailAndPassword(email: $email, password: $password) {\n    email\n    username\n    error {\n      code\n      message\n    }\n  }\n}\n    `;\nexport type SignInWithEmailAndPasswordMutationFn = Apollo.MutationFunction<SignInWithEmailAndPasswordMutation, SignInWithEmailAndPasswordMutationVariables>;\n\n/**\n * __useSignInWithEmailAndPasswordMutation__\n *\n * To run a mutation, you first call `useSignInWithEmailAndPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSignInWithEmailAndPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [signInWithEmailAndPasswordMutation, { data, loading, error }] = useSignInWithEmailAndPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useSignInWithEmailAndPasswordMutation(baseOptions?: Apollo.MutationHookOptions<SignInWithEmailAndPasswordMutation, SignInWithEmailAndPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<SignInWithEmailAndPasswordMutation, SignInWithEmailAndPasswordMutationVariables>(SignInWithEmailAndPasswordDocument, options);\n      }\nexport type SignInWithEmailAndPasswordMutationHookResult = ReturnType<typeof useSignInWithEmailAndPasswordMutation>;\nexport type SignInWithEmailAndPasswordMutationResult = Apollo.MutationResult<SignInWithEmailAndPasswordMutation>;\nexport type SignInWithEmailAndPasswordMutationOptions = Apollo.BaseMutationOptions<SignInWithEmailAndPasswordMutation, SignInWithEmailAndPasswordMutationVariables>;\nexport const SignOutDocument = gql`\n    mutation SignOut {\n  signOut\n}\n    `;\nexport type SignOutMutationFn = Apollo.MutationFunction<SignOutMutation, SignOutMutationVariables>;\n\n/**\n * __useSignOutMutation__\n *\n * To run a mutation, you first call `useSignOutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSignOutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [signOutMutation, { data, loading, error }] = useSignOutMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useSignOutMutation(baseOptions?: Apollo.MutationHookOptions<SignOutMutation, SignOutMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<SignOutMutation, SignOutMutationVariables>(SignOutDocument, options);\n      }\nexport type SignOutMutationHookResult = ReturnType<typeof useSignOutMutation>;\nexport type SignOutMutationResult = Apollo.MutationResult<SignOutMutation>;\nexport type SignOutMutationOptions = Apollo.BaseMutationOptions<SignOutMutation, SignOutMutationVariables>;\nexport const CheckAuthDocument = gql`\n    query CheckAuth {\n  checkAuth {\n    email\n    username\n    error {\n      code\n      message\n    }\n  }\n}\n    `;\n\n/**\n * __useCheckAuthQuery__\n *\n * To run a query within a React component, call `useCheckAuthQuery` and pass it any options that fit your needs.\n * When your component renders, `useCheckAuthQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCheckAuthQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCheckAuthQuery(baseOptions?: Apollo.QueryHookOptions<CheckAuthQuery, CheckAuthQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<CheckAuthQuery, CheckAuthQueryVariables>(CheckAuthDocument, options);\n      }\nexport function useCheckAuthLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<CheckAuthQuery, CheckAuthQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<CheckAuthQuery, CheckAuthQueryVariables>(CheckAuthDocument, options);\n        }\nexport type CheckAuthQueryHookResult = ReturnType<typeof useCheckAuthQuery>;\nexport type CheckAuthLazyQueryHookResult = ReturnType<typeof useCheckAuthLazyQuery>;\nexport type CheckAuthQueryResult = Apollo.QueryResult<CheckAuthQuery, CheckAuthQueryVariables>;","/Users/kylemurray/apollo-file-upload/client/src/components/ui/inputs/index.tsx",["359","360","361","362","363"],"import React from 'react';\nimport styled from 'styled-components'\n\n\ninterface InputWrapperProps {\n  readonly width?: string\n}\n\nconst Wrapper = styled.div<InputWrapperProps>`\n  border-bottom: 1px solid ${({theme: {primary}}) => primary[3]};\n\n  .flex {\n    display: flex;\n    align-items: flex-end;\n    \n    > div {\n      flex: 1 0 auto;\n    }\n  }\n  \n  input {\n    background-color: transparent;\n    border: 0;\n    height: 2.4rem;\n    line-height: 2.4rem;\n    width: ${({width}) => width || '100%'};\n    padding: 0 .5rem;\n\n    :focus {\n      outline: none;\n      background-color: rgba(0,0,0,.2);\n      font-size: 103%;\n    }\n  }\n`\n\nconst MyInput = styled.input<InputProps>`\n`\n\ninterface InputProps {\n  id?: string\n  type?: string\n  name?: string\n  ref?: React.LegacyRef<HTMLInputElement> | any\n  required?: boolean\n  accept?: string\n  autocomplete?: string\n  autofocus?: string\n  value?: string | number\n}\n\ninterface Props {\n  label?: string\n  inputProps?: InputProps\n  prefix?: string\n  suffix?: string\n  width?: string\n  select?: any\n  selectProps?: any\n  render?: React.FC\n}\n\nexport const MyInputField: React.FC<Props> = ({label, inputProps = {}, prefix = null, suffix = null, render, select, selectProps, width}) => {\n\n  return (\n    <Wrapper width={width}>\n      {label && (\n        <label>\n          {label}\n        </label>\n      )}\n      <div className=\"flex\">\n      {prefix}\n      {render || (\n        <MyInput {...inputProps} />\n        )}\n        {suffix}\n      </div>\n    </Wrapper>\n  )\n}","/Users/kylemurray/apollo-file-upload/client/src/components/Search/index.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/accessToken.ts",[],{"ruleId":"364","severity":1,"message":"365","line":12,"column":8,"nodeType":"366","messageId":"367","endLine":12,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":182,"column":16,"nodeType":"370","messageId":"371","endLine":182,"endColumn":21},{"ruleId":"368","severity":1,"message":"369","line":13,"column":16,"nodeType":"370","messageId":"371","endLine":13,"endColumn":21},{"ruleId":"368","severity":1,"message":"369","line":20,"column":22,"nodeType":"370","messageId":"371","endLine":20,"endColumn":80},{"ruleId":"368","severity":1,"message":"372","line":20,"column":23,"nodeType":"373","messageId":"374","endLine":20,"endColumn":76},{"ruleId":"368","severity":1,"message":"369","line":68,"column":22,"nodeType":"370","messageId":"371","endLine":68,"endColumn":63},{"ruleId":"368","severity":1,"message":"372","line":68,"column":23,"nodeType":"373","messageId":"374","endLine":68,"endColumn":59},{"ruleId":"364","severity":1,"message":"375","line":3,"column":9,"nodeType":"366","messageId":"367","endLine":3,"endColumn":13},{"ruleId":"364","severity":1,"message":"376","line":3,"column":15,"nodeType":"366","messageId":"367","endLine":3,"endColumn":25},{"ruleId":"364","severity":1,"message":"377","line":5,"column":23,"nodeType":"366","messageId":"367","endLine":5,"endColumn":31},{"ruleId":"364","severity":1,"message":"378","line":7,"column":9,"nodeType":"366","messageId":"367","endLine":7,"endColumn":18},{"ruleId":"368","severity":1,"message":"369","line":62,"column":16,"nodeType":"370","messageId":"371","endLine":62,"endColumn":21},{"ruleId":"364","severity":1,"message":"379","line":63,"column":10,"nodeType":"366","messageId":"367","endLine":63,"endColumn":20},{"ruleId":"364","severity":1,"message":"380","line":63,"column":22,"nodeType":"366","messageId":"367","endLine":63,"endColumn":35},{"ruleId":"364","severity":1,"message":"381","line":76,"column":22,"nodeType":"366","messageId":"367","endLine":76,"endColumn":27},{"ruleId":"368","severity":1,"message":"369","line":30,"column":22,"nodeType":"370","messageId":"371","endLine":30,"endColumn":27},{"ruleId":"364","severity":1,"message":"382","line":38,"column":31,"nodeType":"366","messageId":"367","endLine":38,"endColumn":34},{"ruleId":"368","severity":1,"message":"369","line":27,"column":21,"nodeType":"370","messageId":"371","endLine":27,"endColumn":36},{"ruleId":"368","severity":1,"message":"372","line":27,"column":22,"nodeType":"373","messageId":"374","endLine":27,"endColumn":32},{"ruleId":"364","severity":1,"message":"383","line":1,"column":16,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"368","severity":1,"message":"369","line":56,"column":25,"nodeType":"370","messageId":"371","endLine":56,"endColumn":45},{"ruleId":"368","severity":1,"message":"372","line":56,"column":26,"nodeType":"373","messageId":"374","endLine":56,"endColumn":41},{"ruleId":"368","severity":1,"message":"369","line":121,"column":19,"nodeType":"370","messageId":"371","endLine":121,"endColumn":77},{"ruleId":"368","severity":1,"message":"372","line":121,"column":20,"nodeType":"373","messageId":"374","endLine":121,"endColumn":73},{"ruleId":"368","severity":1,"message":"369","line":23,"column":27,"nodeType":"370","messageId":"371","endLine":25,"endColumn":22},{"ruleId":"368","severity":1,"message":"372","line":23,"column":28,"nodeType":"373","messageId":"374","endLine":25,"endColumn":18},{"ruleId":"364","severity":1,"message":"384","line":43,"column":20,"nodeType":"366","messageId":"367","endLine":43,"endColumn":26},{"ruleId":"364","severity":1,"message":"385","line":48,"column":33,"nodeType":"366","messageId":"367","endLine":48,"endColumn":37},{"ruleId":"368","severity":1,"message":"369","line":5,"column":32,"nodeType":"370","messageId":"371","endLine":5,"endColumn":54},{"ruleId":"368","severity":1,"message":"372","line":5,"column":33,"nodeType":"373","messageId":"374","endLine":5,"endColumn":50},{"ruleId":"368","severity":1,"message":"369","line":4,"column":23,"nodeType":"370","messageId":"371","endLine":4,"endColumn":47},{"ruleId":"368","severity":1,"message":"372","line":4,"column":24,"nodeType":"373","messageId":"374","endLine":4,"endColumn":43},{"ruleId":"364","severity":1,"message":"386","line":4,"column":37,"nodeType":"366","messageId":"367","endLine":4,"endColumn":42},{"ruleId":"364","severity":1,"message":"383","line":7,"column":26,"nodeType":"366","messageId":"367","endLine":7,"endColumn":35},{"ruleId":"364","severity":1,"message":"387","line":15,"column":16,"nodeType":"366","messageId":"367","endLine":15,"endColumn":21},{"ruleId":"368","severity":1,"message":"369","line":73,"column":25,"nodeType":"370","messageId":"371","endLine":73,"endColumn":49},{"ruleId":"368","severity":1,"message":"372","line":73,"column":26,"nodeType":"373","messageId":"374","endLine":73,"endColumn":45},{"ruleId":"364","severity":1,"message":"386","line":73,"column":39,"nodeType":"366","messageId":"367","endLine":73,"endColumn":44},{"ruleId":"368","severity":1,"message":"369","line":4,"column":33,"nodeType":"370","messageId":"371","endLine":4,"endColumn":57},{"ruleId":"368","severity":1,"message":"372","line":4,"column":34,"nodeType":"373","messageId":"374","endLine":4,"endColumn":53},{"ruleId":"364","severity":1,"message":"386","line":4,"column":47,"nodeType":"366","messageId":"367","endLine":4,"endColumn":52},{"ruleId":"368","severity":1,"message":"369","line":25,"column":28,"nodeType":"370","messageId":"371","endLine":25,"endColumn":52},{"ruleId":"368","severity":1,"message":"372","line":25,"column":29,"nodeType":"373","messageId":"374","endLine":25,"endColumn":48},{"ruleId":"364","severity":1,"message":"386","line":25,"column":42,"nodeType":"366","messageId":"367","endLine":25,"endColumn":47},{"ruleId":"368","severity":1,"message":"369","line":4,"column":26,"nodeType":"370","messageId":"371","endLine":4,"endColumn":55},{"ruleId":"368","severity":1,"message":"372","line":4,"column":27,"nodeType":"373","messageId":"374","endLine":4,"endColumn":51},{"ruleId":"364","severity":1,"message":"386","line":4,"column":45,"nodeType":"366","messageId":"367","endLine":4,"endColumn":50},{"ruleId":"368","severity":1,"message":"369","line":4,"column":34,"nodeType":"370","messageId":"371","endLine":4,"endColumn":58},{"ruleId":"368","severity":1,"message":"372","line":4,"column":35,"nodeType":"373","messageId":"374","endLine":4,"endColumn":54},{"ruleId":"368","severity":1,"message":"369","line":4,"column":30,"nodeType":"370","messageId":"371","endLine":4,"endColumn":54},{"ruleId":"368","severity":1,"message":"372","line":4,"column":31,"nodeType":"373","messageId":"374","endLine":4,"endColumn":50},{"ruleId":"364","severity":1,"message":"386","line":4,"column":44,"nodeType":"366","messageId":"367","endLine":4,"endColumn":49},{"ruleId":"364","severity":1,"message":"388","line":3,"column":18,"nodeType":"366","messageId":"367","endLine":3,"endColumn":30},{"ruleId":"368","severity":1,"message":"369","line":21,"column":21,"nodeType":"370","messageId":"371","endLine":29,"endColumn":6},{"ruleId":"368","severity":1,"message":"372","line":21,"column":22,"nodeType":"373","messageId":"374","endLine":29,"endColumn":2},{"ruleId":"368","severity":1,"message":"369","line":8,"column":17,"nodeType":"370","messageId":"371","endLine":8,"endColumn":61},{"ruleId":"368","severity":1,"message":"372","line":8,"column":18,"nodeType":"373","messageId":"374","endLine":8,"endColumn":57},{"ruleId":"368","severity":1,"message":"369","line":5,"column":18,"nodeType":"370","messageId":"371","endLine":5,"endColumn":31},{"ruleId":"368","severity":1,"message":"372","line":5,"column":19,"nodeType":"373","messageId":"374","endLine":5,"endColumn":27},{"ruleId":"368","severity":1,"message":"369","line":4,"column":16,"nodeType":"370","messageId":"371","endLine":4,"endColumn":23},{"ruleId":"368","severity":1,"message":"372","line":4,"column":17,"nodeType":"373","messageId":"374","endLine":4,"endColumn":19},{"ruleId":"368","severity":1,"message":"369","line":1,"column":36,"nodeType":"370","messageId":"371","endLine":1,"endColumn":50},{"ruleId":"368","severity":1,"message":"389","line":1,"column":37,"nodeType":"366","messageId":"390","endLine":1,"endColumn":46},{"ruleId":"368","severity":1,"message":"369","line":36,"column":24,"nodeType":"370","messageId":"371","endLine":36,"endColumn":32},{"ruleId":"368","severity":1,"message":"391","line":36,"column":25,"nodeType":"366","messageId":"390","endLine":36,"endColumn":28},{"ruleId":"368","severity":1,"message":"369","line":44,"column":28,"nodeType":"370","messageId":"371","endLine":44,"endColumn":55},{"ruleId":"368","severity":1,"message":"372","line":44,"column":29,"nodeType":"373","messageId":"374","endLine":44,"endColumn":51},{"ruleId":"368","severity":1,"message":"369","line":1,"column":28,"nodeType":"370","messageId":"371","endLine":1,"endColumn":36},{"ruleId":"368","severity":1,"message":"392","line":1,"column":29,"nodeType":"366","messageId":"390","endLine":1,"endColumn":32},{"ruleId":"364","severity":1,"message":"393","line":24,"column":7,"nodeType":"366","messageId":"367","endLine":24,"endColumn":22},{"ruleId":"364","severity":1,"message":"383","line":2,"column":16,"nodeType":"366","messageId":"367","endLine":2,"endColumn":25},{"ruleId":"364","severity":1,"message":"394","line":6,"column":3,"nodeType":"366","messageId":"367","endLine":6,"endColumn":15},{"ruleId":"364","severity":1,"message":"395","line":36,"column":43,"nodeType":"366","messageId":"367","endLine":36,"endColumn":48},{"ruleId":"364","severity":1,"message":"396","line":39,"column":25,"nodeType":"366","messageId":"367","endLine":39,"endColumn":32},{"ruleId":"364","severity":1,"message":"397","line":39,"column":41,"nodeType":"366","messageId":"367","endLine":39,"endColumn":48},{"ruleId":"364","severity":1,"message":"398","line":39,"column":56,"nodeType":"366","messageId":"367","endLine":39,"endColumn":62},{"ruleId":"364","severity":1,"message":"399","line":52,"column":14,"nodeType":"366","messageId":"367","endLine":52,"endColumn":15},{"ruleId":"400","severity":1,"message":"401","line":16,"column":11,"nodeType":"402","messageId":"403","endLine":16,"endColumn":14,"suggestions":"404"},{"ruleId":"368","severity":1,"message":"369","line":268,"column":8,"nodeType":"405","messageId":"371","endLine":268,"endColumn":189},{"ruleId":"368","severity":1,"message":"369","line":307,"column":8,"nodeType":"405","messageId":"371","endLine":307,"endColumn":177},{"ruleId":"368","severity":1,"message":"369","line":337,"column":8,"nodeType":"405","messageId":"371","endLine":337,"endColumn":120},{"ruleId":"368","severity":1,"message":"369","line":372,"column":8,"nodeType":"405","messageId":"371","endLine":372,"endColumn":114},{"ruleId":"368","severity":1,"message":"369","line":376,"column":8,"nodeType":"405","messageId":"371","endLine":376,"endColumn":122},{"ruleId":"400","severity":1,"message":"401","line":44,"column":45,"nodeType":"402","messageId":"403","endLine":44,"endColumn":48,"suggestions":"406"},{"ruleId":"400","severity":1,"message":"401","line":58,"column":12,"nodeType":"402","messageId":"403","endLine":58,"endColumn":15,"suggestions":"407"},{"ruleId":"400","severity":1,"message":"401","line":59,"column":17,"nodeType":"402","messageId":"403","endLine":59,"endColumn":20,"suggestions":"408"},{"ruleId":"364","severity":1,"message":"409","line":63,"column":110,"nodeType":"366","messageId":"367","endLine":63,"endColumn":116},{"ruleId":"364","severity":1,"message":"410","line":63,"column":118,"nodeType":"366","messageId":"367","endLine":63,"endColumn":129},"@typescript-eslint/no-unused-vars","'authCert' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","'Link' is defined but never used.","'withRouter' is defined but never used.","'useQuery' is defined but never used.","'RolesEnum' is defined but never used.","'menuAnchor' is assigned a value but never used.","'setMenuAnchor' is assigned a value but never used.","'email' is assigned a value but never used.","'idx' is defined but never used.","'useEffect' is defined but never used.","'errors' is assigned a value but never used.","'data' is assigned a value but never used.","'props' is defined but never used.","'error' is assigned a value but never used.","'FlexGridItem' is defined but never used.","Argument '_filename' should be typed.","missingArgType","Argument 'key' should be typed.","Argument 'str' should be typed.","'fetchJSXElement' is assigned a value but never used.","'SignUpValues' is defined but never used.","'reset' is assigned a value but never used.","'loading' is assigned a value but never used.","'fbError' is assigned a value but never used.","'fbData' is assigned a value but never used.","'_' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["411","412"],"FunctionDeclaration",["413","414"],["415","416"],["417","418"],"'select' is defined but never used.","'selectProps' is defined but never used.",{"messageId":"419","fix":"420","desc":"421"},{"messageId":"422","fix":"423","desc":"424"},{"messageId":"419","fix":"425","desc":"421"},{"messageId":"422","fix":"426","desc":"424"},{"messageId":"419","fix":"427","desc":"421"},{"messageId":"422","fix":"428","desc":"424"},{"messageId":"419","fix":"429","desc":"421"},{"messageId":"422","fix":"430","desc":"424"},"suggestUnknown",{"range":"431","text":"432"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"431","text":"433"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"434","text":"432"},{"range":"434","text":"433"},{"range":"435","text":"432"},{"range":"435","text":"433"},{"range":"436","text":"432"},{"range":"436","text":"433"},[668,671],"unknown","never",[789,792],[1031,1034],[1051,1054]]