[{"/Users/kylemurray/apollo-file-upload/client/src/App.js":"1","/Users/kylemurray/apollo-file-upload/client/src/reportWebVitals.js":"2","/Users/kylemurray/apollo-file-upload/client/src/apollo.js":"3","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/file-form-list.upload.js":"4","/Users/kylemurray/apollo-file-upload/client/src/components/ui/containers/index.js":"5","/Users/kylemurray/apollo-file-upload/client/src/components/ui/flex-util/index.js":"6","/Users/kylemurray/apollo-file-upload/client/src/components/ui/buttons/index.js":"7","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/index.js":"8","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/header/index.js":"9","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/index.js":"10","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/bpm.controller.js":"11","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/genre.controller.js":"12","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-duration.controller.js":"13","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-key.controller.js":"14","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/artist.controller.js":"15","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/header/header.styles.js":"16","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/upload-filename.controller.js":"17","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-title.controller.js":"18","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-form.styles.js":"19","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-field/index.js":"20","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-field/upload-field.styles.js":"21","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/index.js":"22","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tag-list.js":"23","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tag-input.js":"24","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tags.styles.js":"25","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/legend/index.js":"26","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/legend/legend.styles.js":"27","/Users/kylemurray/apollo-file-upload/client/src/components/util/index.js":"28","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/util/index.js":"29","/Users/kylemurray/apollo-file-upload/client/src/components/util/string.util.js":"30","/Users/kylemurray/apollo-file-upload/client/src/index.js":"31","/Users/kylemurray/apollo-file-upload/client/src/components/ui/index.ts":"32","/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/index.ts":"33","/Users/kylemurray/apollo-file-upload/client/src/components/ui/typography/index.tsx":"34","/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/brand.components.tsx":"35","/Users/kylemurray/apollo-file-upload/client/src/components/ui/typography/typography.styles.tsx":"36","/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/brand.styles.tsx":"37","/Users/kylemurray/apollo-file-upload/client/src/global/index.ts":"38","/Users/kylemurray/apollo-file-upload/client/src/components/ui/dividers/index.ts":"39","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/index.tsx":"40","/Users/kylemurray/apollo-file-upload/client/src/store/index.ts":"41","/Users/kylemurray/apollo-file-upload/client/src/my-util/index.ts":"42","/Users/kylemurray/apollo-file-upload/client/src/routes/index.tsx":"43","/Users/kylemurray/apollo-file-upload/client/src/store/slices/index.ts":"44","/Users/kylemurray/apollo-file-upload/client/src/my-util/Token.util.ts":"45","/Users/kylemurray/apollo-file-upload/client/src/store/slices/accessToken.ts":"46","/Users/kylemurray/apollo-file-upload/client/src/routes/Public.routes.tsx":"47","/Users/kylemurray/apollo-file-upload/client/src/routes/Main.routes.tsx":"48","/Users/kylemurray/apollo-file-upload/client/src/pages/Logout.tsx":"49","/Users/kylemurray/apollo-file-upload/client/src/hoc/index.ts":"50","/Users/kylemurray/apollo-file-upload/client/src/pages/Auth.tsx":"51","/Users/kylemurray/apollo-file-upload/client/src/pages/Loading.tsx":"52","/Users/kylemurray/apollo-file-upload/client/src/pages/Search.tsx":"53","/Users/kylemurray/apollo-file-upload/client/src/hoc/ProtectedRoute.hoc.tsx":"54","/Users/kylemurray/apollo-file-upload/client/src/components/navigation/index.ts":"55","/Users/kylemurray/apollo-file-upload/client/src/generated/graphql.tsx":"56","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/styles.auth.tsx":"57","/Users/kylemurray/apollo-file-upload/client/src/components/Search/styles.search.tsx":"58","/Users/kylemurray/apollo-file-upload/client/src/components/Search/index.tsx":"59","/Users/kylemurray/apollo-file-upload/client/src/components/navigation/TopNav/index.tsx":"60","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/sign-in.auth.tsx":"61","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/sign-up.auth.tsx":"62","/Users/kylemurray/apollo-file-upload/client/src/components/Search/search-field.search.tsx":"63","/Users/kylemurray/apollo-file-upload/client/src/components/Search/track-list.search.tsx":"64","/Users/kylemurray/apollo-file-upload/client/src/components/navigation/TopNav/components/top-nav.styles.tsx":"65","/Users/kylemurray/apollo-file-upload/client/src/components/ui/spinner/index.tsx":"66","/Users/kylemurray/apollo-file-upload/client/src/components/ui/inputs/index.tsx":"67","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/yup.auth.ts":"68","/Users/kylemurray/apollo-file-upload/client/src/components/navigation/TopNav/components/index.ts":"69","/Users/kylemurray/apollo-file-upload/client/src/components/navigation/TopNav/components/links.top-nav.tsx":"70"},{"size":5443,"mtime":1619205405065,"results":"71","hashOfConfig":"72"},{"size":433,"mtime":1619205405097,"results":"73","hashOfConfig":"72"},{"size":953,"mtime":1619205405067,"results":"74","hashOfConfig":"72"},{"size":1609,"mtime":1614277213989,"results":"75","hashOfConfig":"72"},{"size":515,"mtime":1615242240988,"results":"76","hashOfConfig":"72"},{"size":359,"mtime":1614277214009,"results":"77","hashOfConfig":"72"},{"size":1363,"mtime":1614277214008,"results":"78","hashOfConfig":"72"},{"size":7264,"mtime":1615242240984,"results":"79","hashOfConfig":"72"},{"size":578,"mtime":1614277213996,"results":"80","hashOfConfig":"72"},{"size":492,"mtime":1614277213992,"results":"81","hashOfConfig":"72"},{"size":403,"mtime":1614277213992,"results":"82","hashOfConfig":"72"},{"size":2073,"mtime":1615242240983,"results":"83","hashOfConfig":"72"},{"size":1306,"mtime":1614277213993,"results":"84","hashOfConfig":"72"},{"size":1227,"mtime":1614277213994,"results":"85","hashOfConfig":"72"},{"size":460,"mtime":1614277213991,"results":"86","hashOfConfig":"72"},{"size":435,"mtime":1614277213995,"results":"87","hashOfConfig":"72"},{"size":492,"mtime":1614277213995,"results":"88","hashOfConfig":"72"},{"size":450,"mtime":1615242240984,"results":"89","hashOfConfig":"72"},{"size":500,"mtime":1614277214003,"results":"90","hashOfConfig":"72"},{"size":1053,"mtime":1614277214001,"results":"91","hashOfConfig":"72"},{"size":924,"mtime":1619205405076,"results":"92","hashOfConfig":"72"},{"size":95,"mtime":1614277213999,"results":"93","hashOfConfig":"72"},{"size":819,"mtime":1614277214000,"results":"94","hashOfConfig":"72"},{"size":799,"mtime":1614277213999,"results":"95","hashOfConfig":"72"},{"size":1235,"mtime":1614277214001,"results":"96","hashOfConfig":"72"},{"size":381,"mtime":1614277213997,"results":"97","hashOfConfig":"72"},{"size":463,"mtime":1614277213998,"results":"98","hashOfConfig":"72"},{"size":30,"mtime":1614277214015,"results":"99","hashOfConfig":"72"},{"size":1549,"mtime":1614277214004,"results":"100","hashOfConfig":"72"},{"size":178,"mtime":1614277214015,"results":"101","hashOfConfig":"72"},{"size":837,"mtime":1619205405090,"results":"102","hashOfConfig":"72"},{"size":221,"mtime":1619205405080,"results":"103","hashOfConfig":"72"},{"size":35,"mtime":1615242240987,"results":"104","hashOfConfig":"72"},{"size":937,"mtime":1619209445132,"results":"105","hashOfConfig":"72"},{"size":200,"mtime":1615242240986,"results":"106","hashOfConfig":"72"},{"size":385,"mtime":1615841126377,"results":"107","hashOfConfig":"72"},{"size":250,"mtime":1615242240986,"results":"108","hashOfConfig":"72"},{"size":130,"mtime":1619205405085,"results":"109","hashOfConfig":"72"},{"size":171,"mtime":1615841126375,"results":"110","hashOfConfig":"72"},{"size":928,"mtime":1619205405068,"results":"111","hashOfConfig":"72"},{"size":464,"mtime":1619205405100,"results":"112","hashOfConfig":"72"},{"size":28,"mtime":1619205405091,"results":"113","hashOfConfig":"72"},{"size":953,"mtime":1619205405099,"results":"114","hashOfConfig":"72"},{"size":184,"mtime":1619205405102,"results":"115","hashOfConfig":"72"},{"size":415,"mtime":1619205405091,"results":"116","hashOfConfig":"72"},{"size":460,"mtime":1619205405101,"results":"117","hashOfConfig":"72"},{"size":567,"mtime":1619205405098,"results":"118","hashOfConfig":"72"},{"size":797,"mtime":1619205405098,"results":"119","hashOfConfig":"72"},{"size":716,"mtime":1619205405094,"results":"120","hashOfConfig":"72"},{"size":63,"mtime":1619205405089,"results":"121","hashOfConfig":"72"},{"size":875,"mtime":1619205405092,"results":"122","hashOfConfig":"72"},{"size":558,"mtime":1619205405093,"results":"123","hashOfConfig":"72"},{"size":248,"mtime":1619205405095,"results":"124","hashOfConfig":"72"},{"size":769,"mtime":1619205405088,"results":"125","hashOfConfig":"72"},{"size":43,"mtime":1619205405079,"results":"126","hashOfConfig":"72"},{"size":18674,"mtime":1619205405084,"results":"127","hashOfConfig":"72"},{"size":1736,"mtime":1619205405070,"results":"128","hashOfConfig":"72"},{"size":2055,"mtime":1619212301243,"results":"129","hashOfConfig":"72"},{"size":970,"mtime":1619205405073,"results":"130","hashOfConfig":"72"},{"size":561,"mtime":1619205405079,"results":"131","hashOfConfig":"72"},{"size":3373,"mtime":1619205405069,"results":"132","hashOfConfig":"72"},{"size":4286,"mtime":1619205405069,"results":"133","hashOfConfig":"72"},{"size":668,"mtime":1619205405073,"results":"134","hashOfConfig":"72"},{"size":4875,"mtime":1619212160710,"results":"135","hashOfConfig":"72"},{"size":633,"mtime":1619205405078,"results":"136","hashOfConfig":"72"},{"size":2523,"mtime":1619205405082,"results":"137","hashOfConfig":"72"},{"size":1499,"mtime":1619205405081,"results":"138","hashOfConfig":"72"},{"size":865,"mtime":1619205405071,"results":"139","hashOfConfig":"72"},{"size":55,"mtime":1619205405076,"results":"140","hashOfConfig":"72"},{"size":1966,"mtime":1619205405077,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},"xnf65o",{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"153"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"153"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"153"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"153"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"153"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"153"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"153"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"153"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"153"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"153"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"153"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"153"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"153"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"153"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"153"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"153"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"226"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"226"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"226"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"226"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},"/Users/kylemurray/apollo-file-upload/client/src/App.js",["307","308","309","310"],"\nimport React, {useEffect, useState} from \"react\";\nimport {BrowserRouter} from 'react-router-dom';\nimport {createGlobalStyle, ThemeProvider} from 'styled-components'\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./apollo\";\nimport {useDispatch} from 'react-redux';\nimport {Routes} from 'routes';\nimport {isAuth, setAuth, clearAuth} from 'my-util';\n\n\n// const Logout = () => {\n//   const [logout] = useLogoutMutation();\n\n//   useEffect(() => {\n\n//     const handleLogout = async() => {\n\n//       try {\n//         await logout();\n//         // setAccessToken('');\n//         localStorage.setItem('token', '')\n//         await client.resetStore();\n//       } catch (err) {\n//         console.log(err.message)\n//       }\n//     }\n\n//     handleLogout();\n//     // logout();\n//     // dispatch(setAccessToken(\"\"))\n//     // client.resetStore();\n//   }, []);\n\n//   return <div>...logging out</div>\n// }\n\nconst theme = {\n  primary: ['#0c0032', '#190061', '#240090', '#3500d3', '#282828'],\n  secondary: ['#2E7358', '#11AB70', '#13BF7D', '#19F7A2', '#62F4BC'],\n  compliment: ['#F2EDBD', '#F3E973', '#F2E768', '#E3D133', '#A8A040'],\n  black: '#000000',\n  white: '#fffaff',\n  grey: 'grey',\n  text: {\n    primary: '#fffaff',\n    secondary: '#11AB70',\n    compliment: '#F3E973',\n    alert: '#F2E768',\n    error: '#D92158',\n  },\n  button: {\n    primary: '#240090',\n    secondary: '#11AB70',\n    compliment: '#F3E973',\n    cancel: '#AB3E5E',\n    disabled: 'grey',\n  },\n  borderRadius: '.2rem',\n  transition: 'all .1s linear',\n  transform: {\n    hover: {\n      translate: 'translateY(-.05rem)',\n      scale: 'scale(1.1)',\n    },\n    active: {\n      translate: 'translateY(0)'\n    },\n  },\n  font: {\n    brand: \"'Gugi', serif\",\n  }\n}\n\nconst GlobalStyle = createGlobalStyle`\n\n    * { \n        margin: 0;\n        padding: 0;\n        color: ${theme.text.primary};\n        font-family: 'Source Sans Pro', sans-serif;\n        font-weight: 400;\n        letter-spacing: .7px;\n    }\n    *,\n    *::after,\n    *::before {\n        box-sizing: inherit;\n        -moz-box-sizing: inherit; \n        -webkit-box-sizing: inherit;\n    }\n    html {\n        box-sizing: border-box;\n        font-size: 62.5%;\n    }\n    body {\n        background: ${theme.black};\n        min-height: 100vh;\n\n\n      .ellipsis, input {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n\n    .brand-text {\n      font-family: 'Gugi', serif;\n    }\n\n    @media (min-width: 760px) {\n      html {\n        font-size: 100%;\n      }\n    }\n`;\n\n /* font-family: ${({ theme }) => theme.fonts.primary};\n        font-size: ${({ theme }) => theme.mobile.base};\n        \n        h1 {\n            font-size: ${({ theme }) => theme.mobile.header};\n            text-align: center;\n        }\n        h2 {\n            font-size: ${({ theme }) => theme.mobile.subheader}\n        }\n        @media (min-width: ${({ theme }) => theme.media.tablet}) {\n            font-size: ${({ theme }) => theme.tablet.base};\n        \n            h1 {\n                font-size: ${({ theme }) => theme.tablet.header};\n                text-align: center;\n            }\n            h2 {\n                font-size: ${({ theme }) => theme.tablet.subheader}\n            }\n        }\n        @media (min-width: ${({ theme }) => theme.media.desktop}) {\n            font-size: ${({ theme }) => theme.desktop.base};\n        \n            h1 {\n                font-size: ${({ theme }) => theme.desktop.header};\n                text-align: center;\n            }\n            h2 {\n                font-size: ${({ theme }) => theme.desktop.subheader}\n            }\n        }\n    }\n    h1, h2, h3, h4, h5, h6 {\n        font-family: ${({ theme }) => theme.fonts.header};\n        font-weight: 300;\n        text-transform: uppercase;\n    } */\n\n\nconst App = () => {\n  // const {loading, error, data} = useQuery(CHECK_AUTH);\n  const [pageLoading, setPageLoading] = useState({\n    loading: true,\n    error: false,\n  })\n\n  useEffect(() => {\n    // @TODO: change from localhost\n    fetch('http://localhost:4000/refresh_token', {\n      method: 'POST',\n      credentials: 'include'\n    }).then(async res => {\n      const {accessToken} = await res.json();\n      setAuth(accessToken);\n      setPageLoading({\n        loading: false, error: false\n      })\n      // dispatch(setAccessToken(accessToken))\n    }).catch((refreshError) => {\n      console.log('[client/src/App.js] refreshError: ', refreshError);\n      clearAuth();\n      setPageLoading({\n        loading: false, error: true\n      })\n    });\n  }, []);\n\n  // @TODO: Create Loading Screen *** should be caught anyway\n  // if (pageLoading.loading) routes = <Loading />\n\n  // if (me) {\n  //   routes = (\n  //     <>\n  //     <TopNav />\n  //     <Switch>\n  //       <Route path=\"/search\" component={Search} /> \n  //       {\n  //         RolesEnum[me.role] >= RolesEnum['CONTRIBUTOR'] &&\n  //           <Route path=\"/upload\" component={Upload} />\n  //       }\n  //       <Route path=\"/logout\" component={Logout} />\n  //       <Redirect to=\"/search\" />\n  //     </Switch>\n  //   </>\n  //   )\n  // }\n\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n          {/* {routes} */}\n          <Routes />\n        {/* Bottom Nav */}\n        {/* <TestCount /> */}\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default () => (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n\n",[],"/Users/kylemurray/apollo-file-upload/client/src/reportWebVitals.js",[],"/Users/kylemurray/apollo-file-upload/client/src/apollo.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/file-form-list.upload.js",["311","312"],"import React from \"react\";\nimport styled from 'styled-components';\nimport {UploadForm} from './upload-form';\nimport {Paper} from 'components/ui';\n\nconst FileUploadContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: column;\n  background-color: ${({theme: {primary}}) => primary[0]};\n  padding: 1rem 1rem;\n  max-width: 960px;\n  margin: 0 auto;\n  border-radius: ${({theme: {borderRadius}}) => borderRadius};\n`\n\nconst FileUploadPaper = styled(Paper)``;\n\nconst FileFormList = ({queryResult: { data, loading, error}, unstageTracks}) => {\n  if (loading) {\n    return <div>loading...</div>;\n  }\n  if (error) {\n    console.log(error.message)\n    return <div>error importing stagedTracks</div>\n  }\n\n  return (\n    // <FileUploadContainer className=\"file-upload-container\">\n\n    // </FileUploadContainer>\n    <FileUploadContainer>\n      {loading && <div>loading...</div>}\n      {error && <div>error importing stagedTracks: {error.message}</div>}\n      {data && data.stagedTracks.length ? (\n        <FileUploadPaper className={'file-upload-paper'}>\n          <>\n              {data.stagedTracks && data.stagedTracks.map((metadata, i) => {\n        \n                return (\n                  <UploadForm metadata={metadata} key={metadata.filename + i} unstageTracks={unstageTracks} idx={i}/>\n              )})}\n            \n          </>\n        </FileUploadPaper>\n        ) : (\n          <span>Choose tracks from your local drive to upload to <span className='brand-text'>meatport</span></span>\n        )}\n  </FileUploadContainer>\n  );\n};\n\nexport default FileFormList;\n",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/containers/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/flex-util/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/buttons/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/index.js",["313","314","315","316"],"import React, {useState} from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport {TRACK_UPLOAD} from 'components/apollo'\nimport {useForm} from 'react-hook-form'\nimport {TagList, TagInput} from './tags';\nimport {TrackInfoHeader} from './header';\nimport Legend from './legend';\nimport {\n  uploadFilenameController,\n  trackTitleController,\n  artistController,\n  bpmController,\n  genreController,\n  trackDurationController,\n  trackKeyController,\n} from './controllers';\nimport {FlexGridItem} from 'components/ui'\nimport {filenameFormatTuple, findKey, keyTable, getKeywords} from './util';\nimport {toTitleCase} from 'components/util';\nimport {UploadCard, FormRow, KeyDisplay} from './upload-form.styles';\nimport UploadField from './upload-field';\n\nexport const UploadForm = ({metadata: {\n  title, filename: _filename, format, artist, duration, bpm, key, genre: genreArray\n}, unstageTracks}) => {\n\n  // CREATED FORM VARIABLES\n  const songLength = `${Math.floor(duration / 60)}:${Math.floor(duration % 60).toString().padStart(2, \"0\")}`\n  const [_format, filename] = filenameFormatTuple(_filename);\n  const genre = genreArray.length !== 0 && genreArray[0].toLowerCase() || '';\n  const initialValues = {\n    title,\n    filename,\n    _filename,\n    artist,\n    duration: songLength,\n    bpm,\n    key,\n    genre,\n  };\n\n  // FORM\n  const {register, errors, control, getValues} = useForm({\n    defaultValues: {...initialValues}\n  });\n\n  // GQL\n  const [trackUpload, {loading, data, error}] = useMutation(TRACK_UPLOAD, {\n    onCompleted: (x) => {\n      console.log(x)\n    }\n  })\n\n  // STATE MANAGEMENT\n  const [{keywords, custom}, setTags] = useState({\n    keywords: getKeywords({title, artist, genre}),\n    custom: [],\n  });\n  const [editInputs, setEditInputs] = useState({\n    filename: false,\n    trackTitle: false,\n    artist: false,\n    trackDuration: false,\n    bpm: false,\n    trackKey: false,\n    genre: false,\n  })\n\n  // METHODS\n  const removeTag = (idx) => {\n    const newTags = [...custom];\n    newTags.splice(idx, 1)\n    setTags({\n      keywords,\n      custom: newTags\n    })\n  };\n  \n  const addTag = (newTag) => {\n    if (newTag.length) {\n      const newTags = [...custom]; \n      newTags.push(newTag);\n      setTags({\n        keywords,\n        custom: newTags\n      })\n    }\n  };\n\n  const onClickEdit = (key) => setEditInputs({...editInputs, [key]: true});\n\n  const handleUnstage = () => {\n    unstageTracks({variables: {files: [_filename]}})\n  };\n\n  const handleUpload = () => {\n    const newValues = {\n      ...initialValues,\n      ...getValues()\n    };\n\n    const _artist = newValues.artist.toLowerCase();\n    const _title = newValues.title.toLowerCase();\n    \n    const [min, sec] = newValues.duration.split(':');\n    const intDuration = +min * 60 + +sec;\n\n    const entry = {\n      ...newValues,\n      \n      filename: newValues.filename + _format,\n      duration: intDuration,\n      genre: newValues.genre.toLowerCase(),\n      _filename,\n      key: findKey(newValues.key) || '0',\n      //  @TODO: grab from auth\n      uploader: 'indy',\n      keywords: [...keywords, ...custom],\n      _artist,\n      _title\n    }\n\n    trackUpload({variables: {entry}}).then(({data: {trackUpload: errors}}) => {\n      if (!errors.length) {\n        unstageTracks({variables: {files: [_filename]}})\n      }\n    })\n  };\n\n  const _getKeyString = (key) => {\n    if (!key) return '--'\n\n    const [fifth, openKey] = keyTable[key]\n\n    return (\n      <KeyDisplay>\n        <span>{key}</span>\n        <span>--</span>\n        <span>{fifth}</span>\n        <span>--</span>\n        <span>{openKey}</span>\n      </KeyDisplay>\n    )\n  }\n\n  if (loading) {\n    return <div>...Uploading...</div>\n  }\n\n  if (error) {\n    return <div>...Error...</div>\n  }\n\n  const formInputRows = [\n    {\n      \"track-title\": {\n        gridItem: {},\n        uploadField: {\n          label: \"Track title\",\n          control,\n          onClickEdit: () => onClickEdit('trackTitle'),\n          isEditing: editInputs.trackTitle,\n          inputField: trackTitleController({control}),\n          required: true,\n          prefill: title,\n        },\n      },\n      artist: {\n        gridItem: {},\n        uploadField: {\n          label: \"Artist\",\n          control,\n          onClickEdit: () => onClickEdit('artist'),\n          isEditing: editInputs.artist,\n          inputField: artistController({\n            control,\n            // @TODO: error doesn't work\n            ref: register({\n              required: true,\n              maxLength: 50,\n            })\n          }),\n          required: true,\n          prefill: artist,\n        },\n      },\n    },\n    {\n      length: {\n        gridItem: {xs: 2},\n        uploadField: {\n          label: \"Length\",\n          onClickEdit: () => onClickEdit('trackDuration'),\n          isEditing: editInputs.trackDuration,\n          inputField: trackDurationController({control}),\n          metadata: `${duration}s`,\n          prefill: songLength,\n        },\n      },\n      bpm: {\n        gridItem: {xs: 2},\n        uploadField: {\n          label: \"BPM\",\n          onClickEdit: () => onClickEdit('bpm'),\n          isEditing: editInputs.bpm,\n          inputField: bpmController({control}),\n          metadata: bpm,\n          prefill: bpm,\n        },\n      },\n      \"track-key\": {\n        gridItem: {xs: 4},\n        uploadField: {\n          control,\n          label: \"Key\",\n          onClickEdit: () => onClickEdit('trackKey'),\n          isEditing: editInputs.trackKey,\n          inputField: trackKeyController({control}),\n          metadata: key,\n          prefill: _getKeyString(findKey(key)),\n        },\n      },\n      genre: {\n        gridItem: {xs: 4},\n        uploadField: {\n          label: \"Genre\",\n          onClickEdit: () => onClickEdit('genre'),\n          isEditing: editInputs.genre,\n          inputField: genreController({control}),\n          metadata: genre,\n          required: true,\n          prefill: toTitleCase(genre),\n        },\n      },\n    },\n    {\n      _filename: {\n        gridItem: {xs: 5},\n        uploadField: {\n          label: \"Filename\",\n          prefill: _filename,\n        },\n      },\n      format: {\n        gridItem: {xs: 1},\n        uploadField: {\n          label: \"Format\",\n          prefill: format,\n        },\n      },\n      filename: {\n        gridItem: {xs: 6},\n        uploadField: {\n          label: \"Upload as\",\n          onClickEdit: () => onClickEdit('filename'),\n          isEditing: editInputs.filename,\n          inputField: uploadFilenameController({control, _format}),\n          prefill: _filename,\n        },\n      },\n    },\n  ]\n\n  return (\n    <UploadCard>\n      <TrackInfoHeader upload={handleUpload} unstage={handleUnstage}/>\n      {formInputRows.map((row, i) => (\n        <FormRow className=\"form-row\" key={`row-${i}`}>\n          {Object.entries(row).map(([id, item]) => (\n            <FlexGridItem key={id} {...item.gridItem}>\n              <UploadField {...item.uploadField} />\n            </FlexGridItem>\n          ))}\n        </FormRow>\n      ))}\n      <FormRow className=\"form-row\">\n        <TagList keywords={keywords} custom={custom} removeTag={removeTag} />\n      </FormRow>\n      <FormRow className=\"form-row\">\n        <TagInput addTag={addTag} />\n      </FormRow>\n      <Legend />\n    </UploadCard>\n    )\n}","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/header/index.js",["317","318"],"import React from 'react';\nimport {Wrapper, UploadButtonsWrapper, HeaderText} from './header.styles';\nimport {FlexSpacer, MyButton} from 'components/ui';\n\nexport const TrackInfoHeader = ({upload, unstage}) => {\n  return (\n    <Wrapper className=\"track-info__header--wrapper\">\n      <HeaderText>Track Information</HeaderText>\n      <FlexSpacer />\n      <UploadButtonsWrapper>\n        <MyButton onClick={upload}>Upload</MyButton>\n        <MyButton type=\"error\" className=\"my-button--cancel\" onClick={unstage}>Unstage</MyButton>\n      </UploadButtonsWrapper>\n    </Wrapper>\n  )\n};\n","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/bpm.controller.js",["319","320","321"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from '../../../ui'\n\nconst bpmController = ({control, ...props}) => (\n  <Controller\n    control={control}\n    name=\"bpm\"\n    render={(\n      {onChange, value, name},\n    ) => (\n      <MyInputField\n        inputProps = {{\n          name,\n          value,\n          onChange,\n        }}\n      />\n    )}\n  />\n);\n\nexport default bpmController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/genre.controller.js",["322","323","324","325","326"],"import {Controller} from 'react-hook-form'\nimport {useQuery} from \"@apollo/client\";\nimport {MyInputField} from '../../../ui'\nimport {GENRES_QUERY} from 'components/apollo'\nimport {toTitleCase} from 'components/util';\n\nimport React, {useState, useEffect} from 'react';\n\nconst GenreSuggest = ({setValue}) => {\n  const [suggestions, setSuggestions] = useState({\n    list: [],\n    text: ''\n  });\n  const [genres, setGenres] = useState([])\n  const {data, error, loading} = useQuery(GENRES_QUERY, {\n    onCompleted: () => setGenres(data && data.getAllGenres.map(({name}) => (name)))\n  })\n\n  const handleChange = ({target: {value}}) => {\n    if (loading) return;\n    let newSuggestions = [];\n    if (value.length > 0) {\n      const regex = new RegExp(`${value}`, `i`);\n      newSuggestions = genres.filter(v => regex.test(v)).sort();\n    }\n\n    setSuggestions({\n      list: newSuggestions,\n      text: value,\n    });\n  }\n\n  // const handleBlur = () => setValue(suggestions.text);\n\n  const suggestionSelected = (value) => {\n    setSuggestions({\n      list: [],\n      text: value,\n    });\n    setValue(value);\n  }\n \n  const renderSuggestions = () => {\n    if (!suggestions.list.length) {\n      return null;\n    }\n    return (\n      <ul>\n        {suggestions.list.map(genre => (\n          <li key={genre} onClick={()=>suggestionSelected(genre)}>\n            {toTitleCase(genre)}\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  return (\n    <div>\n      <input\n        name=\"genre\"\n        onChange={handleChange}\n        // onBlur={handleBlur}\n        placeholder=\"Search for or add genre\"\n        value={suggestions.text}\n        type=\"text\"\n      />\n      {renderSuggestions()}\n    </div>\n  );\n}\n\nconst genreController = ({control, ...props}) => (\n  <Controller\n    control={control}\n    name=\"genre\"\n    render={(\n      {onChange, value, name},\n    ) => (\n      <MyInputField\n        inputProps = {{\n          name,\n          value,\n          onChange,\n        }}\n        render = {<GenreSuggest setValue={onChange} />}\n      />\n    )}\n  />\n);\n\nexport default genreController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-duration.controller.js",["327","328","329"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from '../../../ui'\n\nconst trackDurationController = ({control, ...props}) => {\n  const handleLengthChange = (idx, subValue, value) => {\n    if (!idx && subValue > 99) return value;\n    if (idx && subValue > 59) return value;\n    console.log('[upload-form.component] subValue: ', subValue)\n    const lengthArray = value.split(':');\n    lengthArray[idx] = subValue.slice(-2);\n    return lengthArray.join(':');\n  };\n\n  return (\n    <Controller\n        control={control}\n        name=\"duration\"\n        rules={{required: true}}\n        render={(\n          {value, name, onChange},\n        ) => (\n          <MyInputField\n            inputProps = {{\n              name,\n              value,\n            }}\n            render = {(\n              <>\n                <input value={value.split(':')[0]} type=\"number\" min=\"0\" onChange={({target: {value: subValue}}) => onChange(handleLengthChange(0, subValue, value))} />\n                  <span>:</span>\n                <input value={value.split(':')[1].padStart(2, '0')} type=\"number\" min=\"0\" onChange={({target: {value: subValue}}) => onChange(handleLengthChange(1, subValue, value))}/>\n              </>\n            )}\n          />\n        )}\n      />\n  )\n};\n\nexport default trackDurationController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-key.controller.js",["330","331","332"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from 'components/ui'\nimport {keyTable} from '../util';\n\nconst KeySelect = ({selected, onChange}) => {\n  const keyTableOptions = Object.entries(keyTable).map(([camelot, [fifth, openKey]]) => (\n    {value: camelot, label: `${camelot} - ${fifth} - ${openKey}`}\n  ))\n\n  const selectOptions = {\n    defaultValue: selected === -1 ? 'na' : Object.keys(keyTable)[selected],\n    onChange: onChange,\n  }\n  \n  return (\n    <select {...selectOptions} style={{color: 'black'}}>\n      <option value=\"na\">--</option>\n      {keyTableOptions.map(({value, label}, idx) => (\n        <option key={`key-option${idx}`} value={value}>{label}</option>\n      ))}\n    </select>\n  )\n}\n\nconst trackKeyController = ({control, ...props}) => (\n  <Controller\n    control={control}\n    name=\"key\"\n    render={(\n      {onChange, value, name},\n    ) => (\n      <MyInputField\n        inputProps = {{\n          name,\n          value,\n          onChange,\n        }}\n        render = {\n          // <Select name={name} onChange={({value}) => onChange(value)} options={keyTableOptions} />\n          <KeySelect onChange={onChange} />\n        }\n      />\n    )}\n  />\n);\n\nexport default trackKeyController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/artist.controller.js",["333","334","335"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from '../../../ui'\n\nconst artistController = ({control, ref, ...props}) => (\n  <Controller\n    control={control}\n    name=\"artist\"\n    rules={{required: true}}\n    render={(\n      {onChange, value, name},\n    ) => (\n      <MyInputField\n        inputProps = {{\n          name,\n          value,\n          onChange,\n          ref\n        }}\n      />\n    )}\n  />\n);\n\nexport default artistController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/header/header.styles.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/upload-filename.controller.js",["336","337"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from '../../../ui'\n\nconst uploadFilenameController = ({control, ...props}) => (\n  <Controller\n    control={control}\n    name=\"filename\"\n    render={(\n      {value, name, onChange},\n    ) => {\n      return(\n        <MyInputField\n          suffix={props._format}\n          inputProps = {{\n            name,\n            value,\n            onChange,\n          }}\n        />\n    )}}\n  />\n);\n\nexport default uploadFilenameController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/controllers/track-title.controller.js",["338","339","340"],"import {Controller} from 'react-hook-form'\nimport {MyInputField} from 'components/ui'\n\nconst trackTitleController = ({control, ...props}) => (\n  <Controller\n    control={control}\n    name=\"title\"\n    rules={{required: true}}\n    render={(\n      {onChange, value, name},\n    ) => (\n      <MyInputField\n        inputProps = {{\n          name,\n          value,\n          onChange,\n        }}\n      />\n    )}\n  />\n);\n\nexport default trackTitleController;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-form.styles.js",["341"],"import styled from 'styled-components';\nimport {Card} from 'components/ui';\nimport {FlexRow, FlexGridItem} from 'components/ui'\n\nexport const UploadCard = styled(Card)`\n  &:not(:first-of-type){\n    margin-top: 20px;\n  }\n`\n\nexport const FormRow = styled(FlexRow)`\n  > :not(:first-child) {\n    padding-left: 2rem;\n  }\n\n  &:not(:first-of-type) {\n    padding-top: 1.2rem;\n  }\n`;\n\nexport const KeyDisplay = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: space-between;\n  padding-right: 1rem;\n`","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-field/index.js",["342","343"],"import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  FUFWrapper,\n  FUFLabelWrapper,\n  FUFLabel,\n  FUFValue,\n  FUFEditWrapper,\n  FUFMetadata,\n} from './upload-field.styles';\n\nconst FUFEdit = ({onClick}) => {\n  return (\n    <FUFEditWrapper onClick={onClick}>\n      <FontAwesomeIcon size=\"xs\" icon={faPencilAlt} />\n    </FUFEditWrapper>\n  )\n}\n\nconst UploadField = ({\n  label,\n  onClickEdit = null,\n  isEditing = false,\n  metadata = '',\n  inputField = null,\n  prefill,\n  required\n}) => {\n  return (\n    <FUFWrapper>\n      <FUFLabelWrapper>\n        <FUFLabel>{required && '*'}{label}:</FUFLabel>\n        {!!metadata.length && <FUFMetadata>({metadata})</FUFMetadata>}\n      </FUFLabelWrapper>\n      {isEditing || (required && !prefill.length) ? inputField : (\n        <FUFValue>\n          {prefill}\n          {!!onClickEdit && <FUFEdit onClick={onClickEdit} />}\n        </FUFValue>\n      )}\n    </FUFWrapper>\n  )\n}\n\nexport default UploadField;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/upload-field/upload-field.styles.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tag-list.js",["344","345"],"import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport {\n  Wrapper, TagsWrapper, TagLabel, TagClose, TagWrapper\n} from './tags.styles';\n\nconst TagList = ({keywords = [], custom = [], removeTag}) => {\n  const _makeTags = (list, clearable = false) => (\n    list.map((x, idx) => (\n      <TagWrapper key={x + idx} clearable={clearable}>\n        {clearable && (<TagClose onClick={() => removeTag(idx)}><FontAwesomeIcon icon={faTimesCircle} /></TagClose>)}\n        <TagLabel className=\"tag-label\">{x}</TagLabel>\n      </TagWrapper>\n    ))\n  );\n\n  return (\n    <Wrapper> \n      <TagsWrapper>\n        {[ _makeTags(keywords), _makeTags(custom, true)]}\n      </TagsWrapper>\n    </Wrapper>\n  )\n}\n\nexport default TagList;","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tag-input.js",["346","347"],"import React, {useState} from 'react';\nimport {TagInputWrapper, TagInputSubmit} from './tags.styles';\nimport {MyInputField} from 'components/ui'\n\nconst TagInput = ({addTag}) => {\n  const [newTag, setNewTag] = useState('');\n  const handleChange = ({target: {value}}) => {\n    const allowAlnum = /[^a-z0-9\\s]/i\n    setNewTag(value.replace(allowAlnum, '').toLowerCase());\n  }\n  const handleSubmit = () => {\n    addTag(newTag);\n    setNewTag('');\n  }\n  const disabled = newTag.length === 0;\n\n  return (\n    <TagInputWrapper>\n      <MyInputField width=\"12rem\" inputProps={{onChange: handleChange, value: newTag, placeholder: \"ie: 'uplifting' or 'anjuna'\"}}/>\n      <TagInputSubmit onClick={handleSubmit} disabled={disabled}>Add Tag</TagInputSubmit>\n    </TagInputWrapper>\n  )\n}\n\nexport default TagInput;\n","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/tags/tags.styles.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/legend/index.js",["348","349"],"import React from 'react';\nimport {LegendRow} from './legend.styles';\n\nconst Legend = ({}) => (\n  <LegendRow className=\"upload-form__legend legend-row\">\n    <div className=\"legend\">\n      <span className=\"legend__required\">*required</span>\n      <span className=\"legend__metadata\">(indicates info taken from track metadata)</span>\n    </div>\n  </LegendRow>\n)\n\nexport default Legend","/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/legend/legend.styles.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/util/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Upload/upload-form/util/index.js",["350","351","352","353","354","355"],"export const filenameFormatTuple = (_filename) => {\n  const filetypeRe = /\\.[0-9a-z]+$/i\n  const [_format] = _filename.match(filetypeRe);\n  const filename = _filename.replace(filetypeRe, '');\n\n  return [_format, filename];\n}\n\nexport const keyTable = {\n  '1a': ['Abmin', '6m'],\n  '2a': ['Ebmin', '7m'],\n  '3a': ['Bbmin', '8m'],\n  '4a': ['Fmin', '9m'],\n  '5a': ['Cmin', '10m'],\n  '6a': ['Gmin', '11m'],\n  '7a': ['Dmin', '12m'],\n  '8a': ['Amin', '1m'],\n  '9a': ['Emin', '2m'],\n  '10a': ['Bmin', '3m'],\n  '11a': ['F#min', '4m'],\n  '12a': ['Dbmin', '5m'],\n  '1b': ['Bmaj', '6d'],\n  '2b': ['F#maj', '7d'],\n  '3b': ['Dbmaj', '8d'],\n  '4b': ['Abaj', '9d'],\n  '5b': ['Ebaj', '10d'],\n  '6b': ['Bbmaj', '11d'],\n  '7b': ['Fmaj', '12d'],\n  '8b': ['Cmaj', '1d'],\n  '9b': ['Gmaj', '2d'],\n  '10b': ['Dmaj', '3d'],\n  '11b': ['Amaj', '4d'],\n  '12b': ['Emaj', '5d'],\n}\n\nexport const findKey = (key) => {\n  if (key.toLowerCase() in keyTable) return key.toLowerCase();\n\n  return Object.keys(keyTable).find(k => keyTable[k].find(x => {\n    return x.toLowerCase() === key.toLowerCase()\n  })) \n}\n\nexport const getKeywords = ({title, artist, genre}) => {\n  const keywords = [];\n\n  // Split title by word, remove parentheses\n  title.split(' ')\n    .forEach((x) => {\n      keywords.push(x.toLowerCase().replace(/\\W+/g, ''))\n    });\n  // Split artists and split artist names by whitespace\n  artist.split(', ')\n    .map(y => y.split(' ')).flat()\n    .forEach(z => {\n      keywords.push(z.toLowerCase())\n    });\n  genre.length !== 0 && keywords.push(genre);\n\n  return keywords;\n}","/Users/kylemurray/apollo-file-upload/client/src/components/util/string.util.js",["356","357"],"export const toTitleCase = (str) => {\n  return str.replace(\n    /\\w\\S*/g,\n    function(txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    }\n  );\n}","/Users/kylemurray/apollo-file-upload/client/src/index.js",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/index.ts",[],[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/typography/index.tsx",["358"],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/brand.components.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/typography/typography.styles.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/brand/brand.styles.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/global/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/dividers/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Auth/index.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/store/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/my-util/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/routes/index.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/store/slices/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/my-util/Token.util.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/store/slices/accessToken.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/routes/Public.routes.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/routes/Main.routes.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/pages/Logout.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/hoc/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/pages/Auth.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/pages/Loading.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/pages/Search.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/hoc/ProtectedRoute.hoc.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/navigation/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/generated/graphql.tsx",["359","360","361","362","363","364","365","366","367","368","369","370"],"import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nconst defaultOptions =  {}\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  bye: Scalars['String'];\n  me: User;\n  getStagedTracks: Array<StagedTrack>;\n  searchTracks: Array<Track>;\n  downloadTrack: Scalars['Boolean'];\n  hello2: Scalars['String'];\n};\n\n\nexport type QuerySearchTracksArgs = {\n  query: Scalars['String'];\n  queryType: Scalars['String'];\n};\n\n\nexport type QueryDownloadTrackArgs = {\n  filename: Scalars['String'];\n};\n\nexport type User = {\n  __typename?: 'User';\n  username: Scalars['String'];\n  uploads: Scalars['String'];\n  downloads: Scalars['String'];\n  role: Scalars['String'];\n};\n\nexport type StagedTrack = {\n  __typename?: 'StagedTrack';\n  format: Scalars['String'];\n  title: Scalars['String'];\n  duration: Scalars['Int'];\n  artist: Scalars['String'];\n  key: Scalars['String'];\n  genre: Scalars['String'];\n  filename: Scalars['String'];\n  bpm?: Maybe<Scalars['String']>;\n};\n\nexport type Track = {\n  __typename?: 'Track';\n  id?: Maybe<Scalars['String']>;\n  uploader?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  artist?: Maybe<Scalars['String']>;\n  artists: Array<Scalars['String']>;\n  duration: Scalars['Int'];\n  key?: Maybe<Scalars['String']>;\n  bpm?: Maybe<Scalars['String']>;\n  genre: Array<Scalars['String']>;\n  keywords: Array<Scalars['String']>;\n  storageBucket?: Maybe<Scalars['String']>;\n  filename?: Maybe<Scalars['String']>;\n  format?: Maybe<Scalars['String']>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  register: AuthResponse;\n  login: AuthResponse;\n  logout: Scalars['Boolean'];\n  deleteFiles: Scalars['Boolean'];\n  stageTracks: Scalars['Boolean'];\n  uploadTrack: Scalars['Boolean'];\n};\n\n\nexport type MutationRegisterArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  username?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  username?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationDeleteFilesArgs = {\n  filenames: Array<Scalars['String']>;\n};\n\n\nexport type MutationStageTracksArgs = {\n  filenames: Array<Scalars['String']>;\n};\n\n\nexport type MutationUploadTrackArgs = {\n  entry: TrackInput;\n};\n\nexport type AuthResponse = {\n  __typename?: 'AuthResponse';\n  accessToken: Scalars['String'];\n};\n\nexport type TrackInput = {\n  uploader: Scalars['String'];\n  _uploader: Scalars['String'];\n  title: Scalars['String'];\n  _title: Scalars['String'];\n  artist: Scalars['String'];\n  _artist: Scalars['String'];\n  artists?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  key: Scalars['String'];\n  keywords: Array<Scalars['String']>;\n  bpm: Scalars['String'];\n  genre: Scalars['String'];\n  storageBucket: Scalars['String'];\n  filename: Scalars['String'];\n  _filename: Scalars['String'];\n  format: Scalars['String'];\n};\n\nexport type GetStagedTracksQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetStagedTracksQuery = (\n  { __typename?: 'Query' }\n  & { getStagedTracks: Array<(\n    { __typename?: 'StagedTrack' }\n    & Pick<StagedTrack, 'format' | 'title' | 'duration' | 'artist' | 'key' | 'genre' | 'filename' | 'bpm'>\n  )> }\n);\n\nexport type SearchTracksQueryVariables = Exact<{\n  query: Scalars['String'];\n  queryType: Scalars['String'];\n}>;\n\n\nexport type SearchTracksQuery = (\n  { __typename?: 'Query' }\n  & { searchTracks: Array<(\n    { __typename?: 'Track' }\n    & Pick<Track, 'uploader' | 'title' | 'artist' | 'duration' | 'key' | 'bpm' | 'genre' | 'keywords' | 'filename' | 'format'>\n  )> }\n);\n\nexport type DownloadTracksQueryVariables = Exact<{\n  filename: Scalars['String'];\n}>;\n\n\nexport type DownloadTracksQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'downloadTrack'>\n);\n\nexport type UploadTrackMutationVariables = Exact<{\n  entry: TrackInput;\n}>;\n\n\nexport type UploadTrackMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'uploadTrack'>\n);\n\nexport type AuthUserFragment = (\n  { __typename?: 'User' }\n  & Pick<User, 'username' | 'role'>\n);\n\nexport type MeQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MeQuery = (\n  { __typename?: 'Query' }\n  & { me: (\n    { __typename?: 'User' }\n    & AuthUserFragment\n  ) }\n);\n\nexport type RegisterMutationVariables = Exact<{\n  email: Scalars['String'];\n  password: Scalars['String'];\n  username: Scalars['String'];\n}>;\n\n\nexport type RegisterMutation = (\n  { __typename?: 'Mutation' }\n  & { register: (\n    { __typename?: 'AuthResponse' }\n    & Pick<AuthResponse, 'accessToken'>\n  ) }\n);\n\nexport type LoginMutationVariables = Exact<{\n  email: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'AuthResponse' }\n    & Pick<AuthResponse, 'accessToken'>\n  ) }\n);\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'logout'>\n);\n\nexport const AuthUserFragmentDoc = gql`\n    fragment AuthUser on User {\n  username\n  role\n}\n    `;\nexport const GetStagedTracksDocument = gql`\n    query GetStagedTracks {\n  getStagedTracks {\n    format\n    title\n    duration\n    artist\n    key\n    genre\n    filename\n    bpm\n  }\n}\n    `;\n\n/**\n * __useGetStagedTracksQuery__\n *\n * To run a query within a React component, call `useGetStagedTracksQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetStagedTracksQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetStagedTracksQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetStagedTracksQuery(baseOptions?: Apollo.QueryHookOptions<GetStagedTracksQuery, GetStagedTracksQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<GetStagedTracksQuery, GetStagedTracksQueryVariables>(GetStagedTracksDocument, options);\n      }\nexport function useGetStagedTracksLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetStagedTracksQuery, GetStagedTracksQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<GetStagedTracksQuery, GetStagedTracksQueryVariables>(GetStagedTracksDocument, options);\n        }\nexport type GetStagedTracksQueryHookResult = ReturnType<typeof useGetStagedTracksQuery>;\nexport type GetStagedTracksLazyQueryHookResult = ReturnType<typeof useGetStagedTracksLazyQuery>;\nexport type GetStagedTracksQueryResult = Apollo.QueryResult<GetStagedTracksQuery, GetStagedTracksQueryVariables>;\nexport const SearchTracksDocument = gql`\n    query SearchTracks($query: String!, $queryType: String!) {\n  searchTracks(query: $query, queryType: $queryType) {\n    uploader\n    title\n    artist\n    duration\n    key\n    bpm\n    genre\n    keywords\n    filename\n    format\n  }\n}\n    `;\n\n/**\n * __useSearchTracksQuery__\n *\n * To run a query within a React component, call `useSearchTracksQuery` and pass it any options that fit your needs.\n * When your component renders, `useSearchTracksQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSearchTracksQuery({\n *   variables: {\n *      query: // value for 'query'\n *      queryType: // value for 'queryType'\n *   },\n * });\n */\nexport function useSearchTracksQuery(baseOptions: Apollo.QueryHookOptions<SearchTracksQuery, SearchTracksQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<SearchTracksQuery, SearchTracksQueryVariables>(SearchTracksDocument, options);\n      }\nexport function useSearchTracksLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<SearchTracksQuery, SearchTracksQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<SearchTracksQuery, SearchTracksQueryVariables>(SearchTracksDocument, options);\n        }\nexport type SearchTracksQueryHookResult = ReturnType<typeof useSearchTracksQuery>;\nexport type SearchTracksLazyQueryHookResult = ReturnType<typeof useSearchTracksLazyQuery>;\nexport type SearchTracksQueryResult = Apollo.QueryResult<SearchTracksQuery, SearchTracksQueryVariables>;\nexport const DownloadTracksDocument = gql`\n    query DownloadTracks($filename: String!) {\n  downloadTrack(filename: $filename)\n}\n    `;\n\n/**\n * __useDownloadTracksQuery__\n *\n * To run a query within a React component, call `useDownloadTracksQuery` and pass it any options that fit your needs.\n * When your component renders, `useDownloadTracksQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDownloadTracksQuery({\n *   variables: {\n *      filename: // value for 'filename'\n *   },\n * });\n */\nexport function useDownloadTracksQuery(baseOptions: Apollo.QueryHookOptions<DownloadTracksQuery, DownloadTracksQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<DownloadTracksQuery, DownloadTracksQueryVariables>(DownloadTracksDocument, options);\n      }\nexport function useDownloadTracksLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<DownloadTracksQuery, DownloadTracksQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<DownloadTracksQuery, DownloadTracksQueryVariables>(DownloadTracksDocument, options);\n        }\nexport type DownloadTracksQueryHookResult = ReturnType<typeof useDownloadTracksQuery>;\nexport type DownloadTracksLazyQueryHookResult = ReturnType<typeof useDownloadTracksLazyQuery>;\nexport type DownloadTracksQueryResult = Apollo.QueryResult<DownloadTracksQuery, DownloadTracksQueryVariables>;\nexport const UploadTrackDocument = gql`\n    mutation UploadTrack($entry: TrackInput!) {\n  uploadTrack(entry: $entry)\n}\n    `;\nexport type UploadTrackMutationFn = Apollo.MutationFunction<UploadTrackMutation, UploadTrackMutationVariables>;\n\n/**\n * __useUploadTrackMutation__\n *\n * To run a mutation, you first call `useUploadTrackMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUploadTrackMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [uploadTrackMutation, { data, loading, error }] = useUploadTrackMutation({\n *   variables: {\n *      entry: // value for 'entry'\n *   },\n * });\n */\nexport function useUploadTrackMutation(baseOptions?: Apollo.MutationHookOptions<UploadTrackMutation, UploadTrackMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<UploadTrackMutation, UploadTrackMutationVariables>(UploadTrackDocument, options);\n      }\nexport type UploadTrackMutationHookResult = ReturnType<typeof useUploadTrackMutation>;\nexport type UploadTrackMutationResult = Apollo.MutationResult<UploadTrackMutation>;\nexport type UploadTrackMutationOptions = Apollo.BaseMutationOptions<UploadTrackMutation, UploadTrackMutationVariables>;\nexport const MeDocument = gql`\n    query Me {\n  me {\n    ...AuthUser\n  }\n}\n    ${AuthUserFragmentDoc}`;\n\n/**\n * __useMeQuery__\n *\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMeQuery(baseOptions?: Apollo.QueryHookOptions<MeQuery, MeQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<MeQuery, MeQueryVariables>(MeDocument, options);\n      }\nexport function useMeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, options);\n        }\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\nexport type MeQueryResult = Apollo.QueryResult<MeQuery, MeQueryVariables>;\nexport const RegisterDocument = gql`\n    mutation Register($email: String!, $password: String!, $username: String!) {\n  register(email: $email, password: $password, username: $username) {\n    accessToken\n  }\n}\n    `;\nexport type RegisterMutationFn = Apollo.MutationFunction<RegisterMutation, RegisterMutationVariables>;\n\n/**\n * __useRegisterMutation__\n *\n * To run a mutation, you first call `useRegisterMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRegisterMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [registerMutation, { data, loading, error }] = useRegisterMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      username: // value for 'username'\n *   },\n * });\n */\nexport function useRegisterMutation(baseOptions?: Apollo.MutationHookOptions<RegisterMutation, RegisterMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<RegisterMutation, RegisterMutationVariables>(RegisterDocument, options);\n      }\nexport type RegisterMutationHookResult = ReturnType<typeof useRegisterMutation>;\nexport type RegisterMutationResult = Apollo.MutationResult<RegisterMutation>;\nexport type RegisterMutationOptions = Apollo.BaseMutationOptions<RegisterMutation, RegisterMutationVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    accessToken\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<LoginMutation, LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<LoginMutation, LoginMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, options);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<LoginMutation, LoginMutationVariables>;\nexport const LogoutDocument = gql`\n    mutation Logout {\n  logout\n}\n    `;\nexport type LogoutMutationFn = Apollo.MutationFunction<LogoutMutation, LogoutMutationVariables>;\n\n/**\n * __useLogoutMutation__\n *\n * To run a mutation, you first call `useLogoutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLogoutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [logoutMutation, { data, loading, error }] = useLogoutMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useLogoutMutation(baseOptions?: Apollo.MutationHookOptions<LogoutMutation, LogoutMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument, options);\n      }\nexport type LogoutMutationHookResult = ReturnType<typeof useLogoutMutation>;\nexport type LogoutMutationResult = Apollo.MutationResult<LogoutMutation>;\nexport type LogoutMutationOptions = Apollo.BaseMutationOptions<LogoutMutation, LogoutMutationVariables>;","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/styles.auth.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Search/styles.search.tsx",["371","372","373"],"/Users/kylemurray/apollo-file-upload/client/src/components/Search/index.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/navigation/TopNav/index.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Auth/sign-in.auth.tsx",["374","375","376","377","378","379"],"import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport {Card, Typography, InlineBrand, MyInputField, MyButton, DividerLine} from 'components/ui';\nimport {\n  AuthForm as AuthFormWrapper,\n  AuthItemWrapper,\n  AuthErrorWrapper,\n  AuthSubContainer,\n  AuthToggleText\n} from './styles.auth';\nimport {ToggleState, SignUpValues, IInputFields} from 'types';\nimport {useLoginMutation} from 'generated/graphql';\nimport {useDispatch} from 'react-redux';\nimport {Spinner} from 'components/ui';\nimport {actions} from 'store/slices';\nimport {signInSchema} from './yup.auth';\nimport {setAuth} from 'my-util';\n\nconst {setAccessToken} = actions\n\n// const schema = yup.object().shape({\n//   email: yup.string().required().email(),\n//   password: yup.string().required(),\n// });\n\ninterface Props {\n  toggle: ToggleState;\n}\n\nconst SignIn: React.FC<Props> = ({toggle}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const { register, handleSubmit, errors, setError } = useForm<SignUpValues>({\n    resolver: yupResolver(signInSchema),\n  });\n\n  const [login, {loading, data, error}] = useLoginMutation();\n\n  const onSubmit = async (values: SignUpValues): Promise<void> => {\n    const {email, password} = values;\n\n    try {\n      const {data} = await login({variables: {email, password}});\n\n      if (data) {\n        setAuth(data.login.accessToken);\n        history.push(\"/app/search\");\n      }\n    } catch(err) {\n      console.log('[client/src/components/Auth/auth-form/components/sign-in.auth.tsx] err: ', err)\n    }\n  }\n\n  const inputFields: IInputFields = {\n    email: {\n      label: 'Email',\n      placeholder: \"Your email address\",\n      autoComplete: 'off',\n      error: errors?.email?.message,\n    },\n    password: {\n      label: 'Password',\n      placeholder: \"Password\",\n      type: 'password',\n      error: errors?.password?.message\n    },\n  };\n  \n  return (\n    <Card>\n      <AuthSubContainer>\n      <Typography tag=\"h1\">Sign in to <InlineBrand /></Typography>\n      </AuthSubContainer>\n      <AuthFormWrapper>\n        {Object.entries(inputFields).map(([id, {label, error, ...props}]) => (\n          <AuthItemWrapper key={id}>\n            <MyInputField\n              label={label}\n              inputProps={{\n                name: id,\n                ref: register,\n                ...props,\n              }}\n            />\n            {error && (\n              <AuthErrorWrapper>\n                {error}\n              </AuthErrorWrapper>\n            )}\n          </AuthItemWrapper>\n        ))}\n      </AuthFormWrapper>\n      {\n        errorMessage.length > 0 && (<div style={{flex: 1, padding: '.5rem', color: 'red', marginBottom: '2rem'}}>{errorMessage}</div>)\n      }\n      <AuthSubContainer className=\"auth-button\">\n        <MyButton onClick={handleSubmit(onSubmit)}>{loading ? <Spinner height='2.4rem' /> : 'sign in'}</MyButton>\n      </AuthSubContainer>\n      \n      <DividerLine />\n      <AuthSubContainer>\n        <div>\n          New to&nbsp;<InlineBrand />?&nbsp;\n          <AuthToggleText onClick={toggle}>\n            Sign up for an free account!\n          </AuthToggleText>\n        </div>\n      </AuthSubContainer>\n    </Card>\n  )\n} ;\n\nexport default SignIn\n","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/sign-up.auth.tsx",["380","381","382","383","384"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport {Card, Typography, InlineBrand, MyInputField, MyButton, DividerLine, Spinner} from 'components/ui';\nimport {\n  AuthForm as AuthFormWrapper,\n  AuthItemWrapper,\n  AuthErrorWrapper,\n  AuthSubContainer,\n  AuthToggleText\n} from './styles.auth';\nimport {ToggleState, SignUpValues, IInputFields} from 'types';\nimport {useRegisterMutation} from 'generated/graphql';\nimport {useDispatch} from 'react-redux';\nimport {actions} from 'store/slices';\nimport {signUpSchema} from './yup.auth';\nimport { setAuth } from 'my-util';\n\nconst {setAccessToken} = actions\n\nconst pwLength = 'Password must be between 8 and 26 characters in length';\n\n// const schema = yup.object().shape({\n//   username: yup.string().required(),\n//   email: yup.string().required().email(),\n//   password: yup.string().required().min(8, pwLength).max(26, pwLength).matches(\n//     /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n//     \"Must contain at least 1 uppercase, 1 lowercase, 1 \\\n//     number and at least one special case character from @$!%*#?&\"\n//   ),\n//   confirmPassword: yup.string()\n//   .oneOf([yup.ref('password'), null], 'Passwords must match'),\n// });\n\ninterface Props {\n  toggle: ToggleState;\n}\n\nconst SignUp: React.FC<Props> = ({toggle}) => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors, reset, setError } = useForm<SignUpValues>({\n    resolver: yupResolver(signUpSchema),\n  });\n\n  const [registerUser, {loading, data, error}] = useRegisterMutation({\n    onCompleted: (x) => {\n      const token = x.register?.accessToken || \"\"\n      setAuth(token)\n      dispatch(setAccessToken(token));\n    }\n  });\n\n  const onSubmit = async (values: SignUpValues): Promise<void> => {\n    const {email, password, username} = values;\n    // const {data: {createUserWithEmailAndPassword}} = await fbCreateUser({variables: {email, password, username}});\n    try {\n      await registerUser({variables: {email, password, username}});\n    // const authErr = createUserWithEmailAndPassword.error\n\n      if (error) {\n       console.log('[sign-up.auth] error: ', error)\n      } \n    } catch(err) {\n      // do something if createNewUser throws an error\n      console.log('[sign-up.auth] err: ', err)\n    }\n    \n  }\n\n  const inputFields: IInputFields = {\n    username: {\n      label: 'Username',\n      placeholder: \"Username\",\n      error: errors?.username?.message,\n      autoComplete: 'off',\n    },\n    email: {\n      label: 'Email',\n      placeholder: \"Your email address\",\n      autoComplete: 'off',\n      error: errors?.email?.message,\n    },\n    password: {\n      label: 'Password',\n      placeholder: \"Password\",\n      type: 'password',\n      error: errors?.password?.message\n    },\n    confirmPassword: {\n      label: 'Confirm Password',\n      placeholder: \"Confirm Password\",\n      type: 'password',\n      error: errors?.confirmPassword?.message\n    },\n  };\n\n  return (\n    <Card>\n      <AuthSubContainer>\n        <Typography tag=\"h1\">Sign Up for <InlineBrand /></Typography>\n        <Typography mt=\".5rem\">It's free to view our music library!</Typography>\n      </AuthSubContainer>\n      <AuthFormWrapper>\n        {Object.entries(inputFields).map(([id, {label, error, ...props}]) => (\n          <AuthItemWrapper key={id}>\n            <MyInputField\n              label={label}\n              inputProps={{\n                name: id,\n                ref: register,\n                ...props,\n              }}\n            />\n            {error && (\n              <AuthErrorWrapper>\n                {error}\n              </AuthErrorWrapper>\n            )}\n          </AuthItemWrapper>\n        ))}\n      </AuthFormWrapper>\n      <AuthSubContainer className=\"auth-button\">\n        <MyButton onClick={handleSubmit(onSubmit)}>{loading ? <Spinner height='2.4rem' /> : 'sign in'}</MyButton>\n      </AuthSubContainer>\n      \n      <DividerLine />\n      <AuthSubContainer>\n        <div>\n        Already a&nbsp;<InlineBrand />&nbsp;user?&nbsp;\n          <AuthToggleText onClick={toggle}>\n            Sign in instead!\n          </AuthToggleText>\n        </div>\n      </AuthSubContainer>\n    </Card>\n  )\n} ;\n\nexport default SignUp\n","/Users/kylemurray/apollo-file-upload/client/src/components/Search/search-field.search.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/Search/track-list.search.tsx",["385","386","387","388","389","390","391","392","393"],"/Users/kylemurray/apollo-file-upload/client/src/components/navigation/TopNav/components/top-nav.styles.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/spinner/index.tsx",[],"/Users/kylemurray/apollo-file-upload/client/src/components/ui/inputs/index.tsx",["394","395","396","397","398"],"import React from 'react';\nimport styled from 'styled-components'\n\n\ninterface InputWrapperProps {\n  readonly width?: string\n}\n\nconst Wrapper = styled.div<InputWrapperProps>`\n  border-bottom: 1px solid ${({theme: {primary}}) => primary[3]};\n\n  .flex {\n    display: flex;\n    align-items: flex-end;\n    \n    > div {\n      flex: 1 0 auto;\n    }\n  }\n  \n  input {\n    background-color: transparent;\n    border: 0;\n    height: 2.4rem;\n    line-height: 2.4rem;\n    width: ${({width}) => width || '100%'};\n    padding: 0 .5rem;\n\n    :focus {\n      outline: none;\n      background-color: rgba(0,0,0,.2);\n      font-size: 103%;\n    }\n  }\n`\n\nconst MyInput = styled.input<InputProps>`\n`\n\ninterface InputProps {\n  id?: string\n  type?: string\n  name?: string\n  ref?: React.LegacyRef<HTMLInputElement> | any\n  required?: boolean\n  accept?: string\n  autocomplete?: string\n  autofocus?: string\n  value?: string | number\n}\n\ninterface Props {\n  label?: string\n  inputProps?: InputProps\n  prefix?: string\n  suffix?: string\n  width?: string\n  select?: any\n  selectProps?: any\n  render?: React.FC\n}\n\nexport const MyInputField: React.FC<Props> = ({label, inputProps = {}, prefix = null, suffix = null, render, select, selectProps, width}) => {\n\n  return (\n    <Wrapper width={width}>\n      {label && (\n        <label>\n          {label}\n        </label>\n      )}\n      <div className=\"flex\">\n      {prefix}\n      {render || (\n        <MyInput {...inputProps} />\n        )}\n        {suffix}\n      </div>\n    </Wrapper>\n  )\n}","/Users/kylemurray/apollo-file-upload/client/src/components/Auth/yup.auth.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/components/navigation/TopNav/components/index.ts",[],"/Users/kylemurray/apollo-file-upload/client/src/components/navigation/TopNav/components/links.top-nav.tsx",[],{"ruleId":"399","severity":1,"message":"400","line":7,"column":9,"nodeType":"401","messageId":"402","endLine":7,"endColumn":20},{"ruleId":"399","severity":1,"message":"403","line":9,"column":9,"nodeType":"401","messageId":"402","endLine":9,"endColumn":15},{"ruleId":"399","severity":1,"message":"404","line":161,"column":10,"nodeType":"401","messageId":"402","endLine":161,"endColumn":21},{"ruleId":"405","severity":1,"message":"406","line":220,"column":16,"nodeType":"407","messageId":"408","endLine":220,"endColumn":21},{"ruleId":"405","severity":1,"message":"406","line":20,"column":22,"nodeType":"407","messageId":"408","endLine":20,"endColumn":80},{"ruleId":"405","severity":1,"message":"409","line":20,"column":23,"nodeType":"410","messageId":"411","endLine":20,"endColumn":76},{"ruleId":"405","severity":1,"message":"406","line":23,"column":27,"nodeType":"407","messageId":"408","endLine":25,"endColumn":22},{"ruleId":"405","severity":1,"message":"409","line":23,"column":28,"nodeType":"410","messageId":"411","endLine":25,"endColumn":18},{"ruleId":"399","severity":1,"message":"412","line":43,"column":20,"nodeType":"401","messageId":"402","endLine":43,"endColumn":26},{"ruleId":"399","severity":1,"message":"413","line":48,"column":33,"nodeType":"401","messageId":"402","endLine":48,"endColumn":37},{"ruleId":"405","severity":1,"message":"406","line":5,"column":32,"nodeType":"407","messageId":"408","endLine":5,"endColumn":54},{"ruleId":"405","severity":1,"message":"409","line":5,"column":33,"nodeType":"410","messageId":"411","endLine":5,"endColumn":50},{"ruleId":"405","severity":1,"message":"406","line":4,"column":23,"nodeType":"407","messageId":"408","endLine":4,"endColumn":47},{"ruleId":"405","severity":1,"message":"409","line":4,"column":24,"nodeType":"410","messageId":"411","endLine":4,"endColumn":43},{"ruleId":"399","severity":1,"message":"414","line":4,"column":37,"nodeType":"401","messageId":"402","endLine":4,"endColumn":42},{"ruleId":"399","severity":1,"message":"415","line":7,"column":26,"nodeType":"401","messageId":"402","endLine":7,"endColumn":35},{"ruleId":"399","severity":1,"message":"416","line":15,"column":16,"nodeType":"401","messageId":"402","endLine":15,"endColumn":21},{"ruleId":"405","severity":1,"message":"406","line":73,"column":25,"nodeType":"407","messageId":"408","endLine":73,"endColumn":49},{"ruleId":"405","severity":1,"message":"409","line":73,"column":26,"nodeType":"410","messageId":"411","endLine":73,"endColumn":45},{"ruleId":"399","severity":1,"message":"414","line":73,"column":39,"nodeType":"401","messageId":"402","endLine":73,"endColumn":44},{"ruleId":"405","severity":1,"message":"406","line":4,"column":33,"nodeType":"407","messageId":"408","endLine":4,"endColumn":57},{"ruleId":"405","severity":1,"message":"409","line":4,"column":34,"nodeType":"410","messageId":"411","endLine":4,"endColumn":53},{"ruleId":"399","severity":1,"message":"414","line":4,"column":47,"nodeType":"401","messageId":"402","endLine":4,"endColumn":52},{"ruleId":"405","severity":1,"message":"406","line":25,"column":28,"nodeType":"407","messageId":"408","endLine":25,"endColumn":52},{"ruleId":"405","severity":1,"message":"409","line":25,"column":29,"nodeType":"410","messageId":"411","endLine":25,"endColumn":48},{"ruleId":"399","severity":1,"message":"414","line":25,"column":42,"nodeType":"401","messageId":"402","endLine":25,"endColumn":47},{"ruleId":"405","severity":1,"message":"406","line":4,"column":26,"nodeType":"407","messageId":"408","endLine":4,"endColumn":55},{"ruleId":"405","severity":1,"message":"409","line":4,"column":27,"nodeType":"410","messageId":"411","endLine":4,"endColumn":51},{"ruleId":"399","severity":1,"message":"414","line":4,"column":45,"nodeType":"401","messageId":"402","endLine":4,"endColumn":50},{"ruleId":"405","severity":1,"message":"406","line":4,"column":34,"nodeType":"407","messageId":"408","endLine":4,"endColumn":58},{"ruleId":"405","severity":1,"message":"409","line":4,"column":35,"nodeType":"410","messageId":"411","endLine":4,"endColumn":54},{"ruleId":"405","severity":1,"message":"406","line":4,"column":30,"nodeType":"407","messageId":"408","endLine":4,"endColumn":54},{"ruleId":"405","severity":1,"message":"409","line":4,"column":31,"nodeType":"410","messageId":"411","endLine":4,"endColumn":50},{"ruleId":"399","severity":1,"message":"414","line":4,"column":44,"nodeType":"401","messageId":"402","endLine":4,"endColumn":49},{"ruleId":"399","severity":1,"message":"417","line":3,"column":18,"nodeType":"401","messageId":"402","endLine":3,"endColumn":30},{"ruleId":"405","severity":1,"message":"406","line":21,"column":21,"nodeType":"407","messageId":"408","endLine":29,"endColumn":6},{"ruleId":"405","severity":1,"message":"409","line":21,"column":22,"nodeType":"410","messageId":"411","endLine":29,"endColumn":2},{"ruleId":"405","severity":1,"message":"406","line":8,"column":17,"nodeType":"407","messageId":"408","endLine":8,"endColumn":61},{"ruleId":"405","severity":1,"message":"409","line":8,"column":18,"nodeType":"410","messageId":"411","endLine":8,"endColumn":57},{"ruleId":"405","severity":1,"message":"406","line":5,"column":18,"nodeType":"407","messageId":"408","endLine":5,"endColumn":31},{"ruleId":"405","severity":1,"message":"409","line":5,"column":19,"nodeType":"410","messageId":"411","endLine":5,"endColumn":27},{"ruleId":"405","severity":1,"message":"406","line":4,"column":16,"nodeType":"407","messageId":"408","endLine":4,"endColumn":23},{"ruleId":"405","severity":1,"message":"409","line":4,"column":17,"nodeType":"410","messageId":"411","endLine":4,"endColumn":19},{"ruleId":"405","severity":1,"message":"406","line":1,"column":36,"nodeType":"407","messageId":"408","endLine":1,"endColumn":50},{"ruleId":"405","severity":1,"message":"418","line":1,"column":37,"nodeType":"401","messageId":"419","endLine":1,"endColumn":46},{"ruleId":"405","severity":1,"message":"406","line":36,"column":24,"nodeType":"407","messageId":"408","endLine":36,"endColumn":32},{"ruleId":"405","severity":1,"message":"420","line":36,"column":25,"nodeType":"401","messageId":"419","endLine":36,"endColumn":28},{"ruleId":"405","severity":1,"message":"406","line":44,"column":28,"nodeType":"407","messageId":"408","endLine":44,"endColumn":55},{"ruleId":"405","severity":1,"message":"409","line":44,"column":29,"nodeType":"410","messageId":"411","endLine":44,"endColumn":51},{"ruleId":"405","severity":1,"message":"406","line":1,"column":28,"nodeType":"407","messageId":"408","endLine":1,"endColumn":36},{"ruleId":"405","severity":1,"message":"421","line":1,"column":29,"nodeType":"401","messageId":"419","endLine":1,"endColumn":32},{"ruleId":"399","severity":1,"message":"422","line":23,"column":7,"nodeType":"401","messageId":"402","endLine":23,"endColumn":22},{"ruleId":"405","severity":1,"message":"406","line":272,"column":8,"nodeType":"423","messageId":"408","endLine":272,"endColumn":132},{"ruleId":"405","severity":1,"message":"406","line":276,"column":8,"nodeType":"423","messageId":"408","endLine":276,"endColumn":140},{"ruleId":"405","severity":1,"message":"406","line":317,"column":8,"nodeType":"423","messageId":"408","endLine":317,"endColumn":122},{"ruleId":"405","severity":1,"message":"406","line":321,"column":8,"nodeType":"423","messageId":"408","endLine":321,"endColumn":131},{"ruleId":"405","severity":1,"message":"406","line":350,"column":8,"nodeType":"423","messageId":"408","endLine":350,"endColumn":128},{"ruleId":"405","severity":1,"message":"406","line":354,"column":8,"nodeType":"423","messageId":"408","endLine":354,"endColumn":137},{"ruleId":"405","severity":1,"message":"406","line":385,"column":8,"nodeType":"423","messageId":"408","endLine":385,"endColumn":132},{"ruleId":"405","severity":1,"message":"406","line":415,"column":8,"nodeType":"423","messageId":"408","endLine":415,"endColumn":93},{"ruleId":"405","severity":1,"message":"406","line":419,"column":8,"nodeType":"423","messageId":"408","endLine":419,"endColumn":101},{"ruleId":"405","severity":1,"message":"406","line":454,"column":8,"nodeType":"423","messageId":"408","endLine":454,"endColumn":123},{"ruleId":"405","severity":1,"message":"406","line":488,"column":8,"nodeType":"423","messageId":"408","endLine":488,"endColumn":114},{"ruleId":"405","severity":1,"message":"406","line":518,"column":8,"nodeType":"423","messageId":"408","endLine":518,"endColumn":117},{"ruleId":"399","severity":1,"message":"424","line":3,"column":8,"nodeType":"401","messageId":"402","endLine":3,"endColumn":13},{"ruleId":"399","severity":1,"message":"425","line":4,"column":8,"nodeType":"401","messageId":"402","endLine":4,"endColumn":16},{"ruleId":"399","severity":1,"message":"426","line":5,"column":8,"nodeType":"401","messageId":"402","endLine":5,"endColumn":17},{"ruleId":"399","severity":1,"message":"427","line":21,"column":8,"nodeType":"401","messageId":"402","endLine":21,"endColumn":22},{"ruleId":"399","severity":1,"message":"428","line":33,"column":9,"nodeType":"401","messageId":"402","endLine":33,"endColumn":17},{"ruleId":"399","severity":1,"message":"429","line":35,"column":24,"nodeType":"401","messageId":"402","endLine":35,"endColumn":39},{"ruleId":"399","severity":1,"message":"430","line":36,"column":43,"nodeType":"401","messageId":"402","endLine":36,"endColumn":51},{"ruleId":"399","severity":1,"message":"413","line":40,"column":27,"nodeType":"401","messageId":"402","endLine":40,"endColumn":31},{"ruleId":"399","severity":1,"message":"416","line":40,"column":33,"nodeType":"401","messageId":"402","endLine":40,"endColumn":38},{"ruleId":"399","severity":1,"message":"431","line":4,"column":13,"nodeType":"401","messageId":"402","endLine":4,"endColumn":16},{"ruleId":"399","severity":1,"message":"432","line":22,"column":7,"nodeType":"401","messageId":"402","endLine":22,"endColumn":15},{"ruleId":"399","severity":1,"message":"433","line":42,"column":43,"nodeType":"401","messageId":"402","endLine":42,"endColumn":48},{"ruleId":"399","severity":1,"message":"430","line":42,"column":50,"nodeType":"401","messageId":"402","endLine":42,"endColumn":58},{"ruleId":"399","severity":1,"message":"413","line":46,"column":34,"nodeType":"401","messageId":"402","endLine":46,"endColumn":38},{"ruleId":"399","severity":1,"message":"434","line":16,"column":8,"nodeType":"401","messageId":"402","endLine":16,"endColumn":13},{"ruleId":"399","severity":1,"message":"435","line":17,"column":8,"nodeType":"401","messageId":"402","endLine":17,"endColumn":17},{"ruleId":"399","severity":1,"message":"436","line":19,"column":8,"nodeType":"401","messageId":"402","endLine":19,"endColumn":17},{"ruleId":"399","severity":1,"message":"437","line":26,"column":8,"nodeType":"401","messageId":"402","endLine":26,"endColumn":20},{"ruleId":"399","severity":1,"message":"438","line":27,"column":32,"nodeType":"401","messageId":"402","endLine":27,"endColumn":37},{"ruleId":"439","severity":1,"message":"440","line":32,"column":18,"nodeType":"441","messageId":"442","endLine":32,"endColumn":21,"suggestions":"443"},{"ruleId":"439","severity":1,"message":"440","line":35,"column":68,"nodeType":"441","messageId":"442","endLine":35,"endColumn":71,"suggestions":"444"},{"ruleId":"399","severity":1,"message":"445","line":75,"column":46,"nodeType":"401","messageId":"402","endLine":75,"endColumn":49},{"ruleId":"439","severity":1,"message":"440","line":157,"column":27,"nodeType":"441","messageId":"442","endLine":157,"endColumn":30,"suggestions":"446"},{"ruleId":"439","severity":1,"message":"440","line":44,"column":45,"nodeType":"441","messageId":"442","endLine":44,"endColumn":48,"suggestions":"447"},{"ruleId":"439","severity":1,"message":"440","line":58,"column":12,"nodeType":"441","messageId":"442","endLine":58,"endColumn":15,"suggestions":"448"},{"ruleId":"439","severity":1,"message":"440","line":59,"column":17,"nodeType":"441","messageId":"442","endLine":59,"endColumn":20,"suggestions":"449"},{"ruleId":"399","severity":1,"message":"450","line":63,"column":110,"nodeType":"401","messageId":"402","endLine":63,"endColumn":116},{"ruleId":"399","severity":1,"message":"451","line":63,"column":118,"nodeType":"401","messageId":"402","endLine":63,"endColumn":129},"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'isAuth' is defined but never used.","'pageLoading' is assigned a value but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","'errors' is assigned a value but never used.","'data' is assigned a value but never used.","'props' is defined but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'FlexGridItem' is defined but never used.","Argument '_filename' should be typed.","missingArgType","Argument 'key' should be typed.","Argument 'str' should be typed.","'fetchJSXElement' is assigned a value but never used.","FunctionDeclaration","'Table' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'setAccessToken' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'setError' is assigned a value but never used.","'yup' is defined but never used.","'pwLength' is assigned a value but never used.","'reset' is assigned a value but never used.","'Paper' is defined but never used.","'TableBody' is defined but never used.","'TableHead' is defined but never used.","'fileDownload' is defined but never used.","'Track' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["452","453"],["454","455"],"'key' is defined but never used.",["456","457"],["458","459"],["460","461"],["462","463"],"'select' is defined but never used.","'selectProps' is defined but never used.",{"messageId":"464","fix":"465","desc":"466"},{"messageId":"467","fix":"468","desc":"469"},{"messageId":"464","fix":"470","desc":"466"},{"messageId":"467","fix":"471","desc":"469"},{"messageId":"464","fix":"472","desc":"466"},{"messageId":"467","fix":"473","desc":"469"},{"messageId":"464","fix":"474","desc":"466"},{"messageId":"467","fix":"475","desc":"469"},{"messageId":"464","fix":"476","desc":"466"},{"messageId":"467","fix":"477","desc":"469"},{"messageId":"464","fix":"478","desc":"466"},{"messageId":"467","fix":"479","desc":"469"},"suggestUnknown",{"range":"480","text":"481"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"480","text":"482"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"483","text":"481"},{"range":"483","text":"482"},{"range":"484","text":"481"},{"range":"484","text":"482"},{"range":"485","text":"481"},{"range":"485","text":"482"},{"range":"486","text":"481"},{"range":"486","text":"482"},{"range":"487","text":"481"},{"range":"487","text":"482"},[1000,1003],"unknown","never",[1075,1078],[4651,4654],[789,792],[1031,1034],[1051,1054]]